import logging
from flask import Flask, render_template

from config.settings import VERSION, DEBUG, WEBAPP_PORT, WEBAPP_HOST
from routes.news_routes import news_bp
from routes.webapp_routes import webapp_bp
from routes.api_routes import api_bp
from utils.logging_setup import setup_logging

# --- –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ---
setup_logging()
logger = logging.getLogger("news_ai_bot")

app = Flask(__name__)
app.config["VERSION"] = VERSION


# üî• –§–∏–ª—å—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –≤–∞–∂–Ω–æ—Å—Ç–∏
def importance_icon(value: float) -> str:
    if value is None:
        return "‚ùî"
    if value >= 0.8:
        return "üî•"
    elif value >= 0.5:
        return "‚ö°"
    return "üí§"


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä –≤ Jinja
app.jinja_env.filters["importance_icon"] = importance_icon


# –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
@app.route("/")
def index():
    return render_template("index.html", active_page="home")


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
app.register_blueprint(news_bp)
app.register_blueprint(webapp_bp)
app.register_blueprint(api_bp)


# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ---
if __name__ == "__main__":
    from database.db_models import get_latest_news

    logger.info(f"üöÄ Webapp –∑–∞–ø—É—â–µ–Ω (—Ö–æ—Å—Ç {WEBAPP_HOST}, –ø–æ—Ä—Ç {WEBAPP_PORT}, debug={DEBUG})")

    try:
        latest = get_latest_news(limit=5)
        logger.debug("üîé –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –ë–î:")
        for n in latest:
            logger.debug(
                "- %s... (credibility=%s, importance=%s)",
                n["title"][:50],
                n.get("credibility"),
                n.get("importance"),
            )
    except Exception:
        logger.exception("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ debug-–∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π")

    app.run(host=WEBAPP_HOST, port=WEBAPP_PORT, debug=DEBUG)
