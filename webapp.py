import logging
from flask import Flask

from config.constants import VERSION
from routes.news_routes import news_bp
from utils.logging_setup import setup_logging

# --- –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ---
setup_logging()
logger = logging.getLogger("news_ai_bot")

app = Flask(__name__)
app.config["VERSION"] = VERSION


# üî• –§–∏–ª—å—Ç—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∫–æ–Ω–æ–∫ –≤–∞–∂–Ω–æ—Å—Ç–∏
def importance_icon(value: float) -> str:
    if value is None:
        return "‚ùî"
    if value >= 0.8:
        return "üî•"
    elif value >= 0.5:
        return "‚ö°"
    else:
        return "üí§"


# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä –≤ Jinja
app.jinja_env.filters["importance_icon"] = importance_icon

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã
app.register_blueprint(news_bp)


# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ ---
if __name__ == "__main__":
    from database.db_models import get_latest_news

    logger.info("üöÄ Webapp –∑–∞–ø—É—â–µ–Ω (–ø–æ—Ä—Ç 5000)")

    # Debug: –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏
    print("üîé Debug: –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –ë–î")
    try:
        latest = get_latest_news(limit=5)
        for n in latest:
            print(f"- {n['title'][:50]}...")
            print(f"  credibility={n.get('credibility')}, importance={n.get('importance')}")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ debug-–∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")

    app.run(host="127.0.0.1", port=8001, debug=True)
