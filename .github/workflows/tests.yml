name: Tests

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Format check (Black)
        run: black --check .

      - name: Lint (Flake8 - critical errors only)
        run: |
          flake8 . \
            --exclude=venv,__pycache__,.git,tools,parsers/advanced_parser.py \
            --max-line-length=120 \
            --ignore=E402,E501,W293,F401,F841,F541,E722 \
            --select=F821,F811

      - name: Run tests with coverage
        run: |
          python -m pytest \
            --cov=. \
            --cov-report=xml \
            --cov-report=term-missing \
            --cov-fail-under=70 \
            --maxfail=5 \
            --disable-warnings \
            -v

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint-full:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Full lint check
        run: |
          flake8 . --exclude=venv,__pycache__,.git
        continue-on-error: true

  security:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install safety bandit

      - name: Security check (Safety)
        run: safety check
        continue-on-error: true

      - name: Security check (Bandit)
        run: bandit -r . -x tests/ -f json -o bandit-report.json || true
        continue-on-error: true
