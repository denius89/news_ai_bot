# Makefile for news_ai_bot ‚Äî quick dev commands

PY?=python3

.PHONY: run-bot run-web run-digests run-events run-news test test-cov lint format check dev run-tests-bot check-db run-all stop-all restart-all status logs

# 1) Run Telegram bot
run-bot:
	$(PY) -m telegram_bot.bot

# 2) Run web app
run-web:
	$(PY) webapp.py

# 3) Run digests generator (AI, category economy, limit 5)
run-digests:
	$(PY) -m digests.generator --ai --limit 5 --category economy

# 4) Fetch and store events
run-events:
	$(PY) tools/fetch_and_store_events.py

# 5) Fetch and store news
run-news:
	$(PY) tools/fetch_and_store_news.py

# 6) Run tests
test:
	$(PY) -m pytest

# 7) Run tests with coverage
test-cov:
	$(PY) -m pytest --cov --cov-report=term-missing

# 8) Lint
lint:
	flake8 .

# 9) Format (black)
format:
	black .

# 10) Check: lint + tests
check:
	$(MAKE) lint
	$(MAKE) test

# 11) Run tests then bot
run-tests-bot:
	$(MAKE) test
	$(MAKE) run-bot

# 12) Check database schema
check-db:
	$(PY) tools/check_database.py

# 13) Dev: run bot and web together
dev:
	$(MAKE) run-bot & \
	$(MAKE) run-web

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ ===

# 14) –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã (–±–æ—Ç + WebApp)
run-all:
	$(PY) tools/run_all.py start

# 15) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
stop-all:
	$(PY) tools/run_all.py stop

# 16) –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
restart-all:
	$(PY) tools/run_all.py restart

# 17) –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
status:
	$(PY) tools/run_all.py status

# 18) –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
logs:
	@if command -v tail >/dev/null 2>&1; then \
		tail -n 100 -f logs/bot.log logs/webapp.log; \
	else \
		echo "üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –æ—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª—ã:"; \
		echo "   - logs/bot.log"; \
		echo "   - logs/webapp.log"; \
		echo ""; \
		echo "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python tools/run_all.py logs"; \
	fi

