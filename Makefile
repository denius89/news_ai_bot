# PulseAI Development Makefile
# üöÄ –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞–º–∏

# =============================================================================
# üéØ –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ü–û–†–¢–û–í
# =============================================================================

REACT_PORT = 3000
FLASK_PORT = 8001
FASTAPI_PORT = 8000

# =============================================================================
# üéØ –¶–í–ï–¢–ê –ò –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï
# =============================================================================

GREEN = \033[0;32m
YELLOW = \033[0;33m
RED = \033[0;31m
BLUE = \033[0;34m
NC = \033[0m # No Color

# =============================================================================
# üéØ –û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´
# =============================================================================

.PHONY: help start stop restart check-ports logs clean cloudflare-config update-config smart-push

# –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
help:
	@echo "$(BLUE)üöÄ PulseAI Production Commands$(NC)"
	@echo ""
	@echo "$(GREEN)–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:$(NC)"
	@echo "  $(YELLOW)make start$(NC)        - –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  $(YELLOW)make stop$(NC)         - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  $(YELLOW)make restart$(NC)      - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
	@echo "  $(YELLOW)make check-ports$(NC)  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ—Ä—Ç–æ–≤"
	@echo "  $(YELLOW)make logs$(NC)         - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
	@echo "  $(YELLOW)make clean$(NC)        - –û—á–∏—Å—Ç–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å—ã –∏ –ø–æ—Ä—Ç—ã"
	@echo ""
	@echo "$(GREEN)–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:$(NC)"
	@echo "  $(YELLOW)make flask$(NC)        - –ó–∞–ø—É—Å—Ç–∏—Ç—å Flask + React (–ø–æ—Ä—Ç $(FLASK_PORT))"
	@echo "  $(YELLOW)make bot$(NC)          - –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ Telegram Bot"
	@echo "  $(YELLOW)make build$(NC)        - –°–æ–±—Ä–∞—Ç—å React –¥–ª—è production"
	@echo ""
	@echo "$(GREEN)Cloudflare –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:$(NC)"
	@echo "  $(YELLOW)make cloudflare-config$(NC) - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é Cloudflare"
	@echo "  $(YELLOW)make update-config$(NC)    - –û–±–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
	@echo ""
	@echo "$(GREEN)Git –∏ –∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞:$(NC)"
	@echo "  $(YELLOW)make smart-push$(NC)       - –£–º–Ω—ã–π push —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞"
	@echo ""
	@echo "$(GREEN)–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:$(NC)"
	@echo "  $(YELLOW)Flask (–ø–æ—Ä—Ç $(FLASK_PORT)):$(NC)   React —Å—Ç–∞—Ç–∏–∫–∞ + API"
	@echo "  $(YELLOW)Telegram Bot:$(NC)                 –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏"
	@echo "  $(YELLOW)React:$(NC)                        –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –≤ Flask"

# =============================================================================
# üéØ –ü–†–û–í–ï–†–ö–ê –ü–û–†–¢–û–í
# =============================================================================

check-ports:
	@echo "$(BLUE)üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤...$(NC)"
	@echo ""
	@$(MAKE) check-port-react
	@$(MAKE) check-port-flask
	@$(MAKE) check-port-fastapi
	@echo ""

check-port-react:
	@if lsof -Pi :$(REACT_PORT) -sTCP:LISTEN -t >/dev/null 2>&1; then \
		echo "$(RED)‚ùå –ü–æ—Ä—Ç $(REACT_PORT) –∑–∞–Ω—è—Ç$(NC)"; \
		lsof -Pi :$(REACT_PORT) -sTCP:LISTEN; \
	else \
		echo "$(GREEN)‚úÖ –ü–æ—Ä—Ç $(REACT_PORT) —Å–≤–æ–±–æ–¥–µ–Ω$(NC)"; \
	fi

check-port-flask:
	@if lsof -Pi :$(FLASK_PORT) -sTCP:LISTEN -t >/dev/null 2>&1; then \
		echo "$(RED)‚ùå –ü–æ—Ä—Ç $(FLASK_PORT) –∑–∞–Ω—è—Ç$(NC)"; \
		lsof -Pi :$(FLASK_PORT) -sTCP:LISTEN; \
	else \
		echo "$(GREEN)‚úÖ –ü–æ—Ä—Ç $(FLASK_PORT) —Å–≤–æ–±–æ–¥–µ–Ω$(NC)"; \
	fi

check-port-fastapi:
	@if lsof -Pi :$(FASTAPI_PORT) -sTCP:LISTEN -t >/dev/null 2>&1; then \
		echo "$(RED)‚ùå –ü–æ—Ä—Ç $(FASTAPI_PORT) –∑–∞–Ω—è—Ç$(NC)"; \
		lsof -Pi :$(FASTAPI_PORT) -sTCP:LISTEN; \
	else \
		echo "$(GREEN)‚úÖ –ü–æ—Ä—Ç $(FASTAPI_PORT) —Å–≤–æ–±–æ–¥–µ–Ω$(NC)"; \
	fi

# =============================================================================
# üéØ –ó–ê–ü–£–°–ö –°–ï–†–í–ò–°–û–í
# =============================================================================

start: check-ports
	@echo "$(BLUE)üöÄ –ó–∞–ø—É—Å–∫ PulseAI —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@echo ""
	@$(MAKE) build
	@$(MAKE) start-flask
	@echo ""
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!$(NC)"
	@echo "$(YELLOW)Flask + React:$(NC) http://localhost:$(FLASK_PORT)/webapp"
	@echo "$(YELLOW)API:$(NC) http://localhost:$(FLASK_PORT)/api"

start-react:
	@echo "$(BLUE)‚öõÔ∏è  –ó–∞–ø—É—Å–∫ React (Vite)...$(NC)"
	@cd webapp && npm run dev > ../logs/react.log 2>&1 &
	@echo "$$!" > logs/react.pid
	@sleep 3
	@if curl -s http://localhost:$(REACT_PORT) > /dev/null; then \
		echo "$(GREEN)‚úÖ React –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $(REACT_PORT)$(NC)"; \
	else \
		echo "$(RED)‚ùå React –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è$(NC)"; \
	fi

start-flask:
	@echo "$(BLUE)üêç –ó–∞–ø—É—Å–∫ Flask API...$(NC)"
	@python3 webapp.py > logs/flask.log 2>&1 &
	@echo "$$!" > logs/flask.pid
	@sleep 3
	@if curl -s http://localhost:$(FLASK_PORT)/api/health > /dev/null; then \
		echo "$(GREEN)‚úÖ Flask API –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É $(FLASK_PORT)$(NC)"; \
	else \
		echo "$(RED)‚ùå Flask API –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è$(NC)"; \
	fi

start-bot:
	@echo "$(BLUE)ü§ñ –ó–∞–ø—É—Å–∫ Telegram Bot...$(NC)"
	@python3 bot.py > logs/bot.log 2>&1 &
	@echo "$$!" > logs/bot.pid
	@sleep 2
	@echo "$(GREEN)‚úÖ Telegram Bot –∑–∞–ø—É—â–µ–Ω$(NC)"

build:
	@echo "$(BLUE)üî® –°–±–æ—Ä–∫–∞ React –¥–ª—è production...$(NC)"
	@cd webapp && npx vite build
	@echo "$(GREEN)‚úÖ React —Å–æ–±—Ä–∞–Ω –≤ webapp/dist/$(NC)"

# =============================================================================
# üéØ –ò–ù–î–ò–í–ò–î–£–ê–õ–¨–ù–´–ï –ö–û–ú–ê–ù–î–´
# =============================================================================

flask: check-port-flask build
	@$(MAKE) start-flask

bot:
	@$(MAKE) start-bot

# =============================================================================
# üéØ –û–°–¢–ê–ù–û–í–ö–ê –°–ï–†–í–ò–°–û–í
# =============================================================================

stop:
	@echo "$(BLUE)üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...$(NC)"
	@$(MAKE) stop-flask
	@$(MAKE) stop-bot
	@echo "$(GREEN)‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

stop-react:
	@if [ -f logs/react.pid ]; then \
		kill $$(cat logs/react.pid) 2>/dev/null || true; \
		rm -f logs/react.pid; \
		echo "$(YELLOW)üõë React –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; \
	fi

stop-flask:
	@if [ -f logs/flask.pid ]; then \
		kill $$(cat logs/flask.pid) 2>/dev/null || true; \
		rm -f logs/flask.pid; \
		echo "$(YELLOW)üõë Flask –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; \
	fi

stop-bot:
	@if [ -f logs/bot.pid ]; then \
		kill $$(cat logs/bot.pid) 2>/dev/null || true; \
		rm -f logs/bot.pid; \
		echo "$(YELLOW)üõë Bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; \
	fi

# =============================================================================
# üéØ –ü–ï–†–ï–ó–ê–ü–£–°–ö –ò –û–ß–ò–°–¢–ö–ê
# =============================================================================

restart: stop start

clean: stop
	@echo "$(BLUE)üßπ –û—á–∏—Å—Ç–∫–∞...$(NC)"
	@# –£–±–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –Ω–∞—à–∏—Ö –ø–æ—Ä—Ç–∞—Ö
	@lsof -ti:$(REACT_PORT) | xargs kill -9 2>/dev/null || true
	@lsof -ti:$(FLASK_PORT) | xargs kill -9 2>/dev/null || true
	@lsof -ti:$(FASTAPI_PORT) | xargs kill -9 2>/dev/null || true
	@# –û—á–∏—â–∞–µ–º –ª–æ–≥–∏
	@rm -f logs/*.pid
	@echo "$(GREEN)‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞$(NC)"

# =============================================================================
# üéØ –õ–û–ì–ò –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì
# =============================================================================

logs:
	@echo "$(BLUE)üìã –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@echo ""
	@echo "$(YELLOW)=== React (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫) ===$(NC)"
	@tail -10 logs/react.log 2>/dev/null || echo "–ù–µ—Ç –ª–æ–≥–æ–≤ React"
	@echo ""
	@echo "$(YELLOW)=== Flask (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫) ===$(NC)"
	@tail -10 logs/flask.log 2>/dev/null || echo "–ù–µ—Ç –ª–æ–≥–æ–≤ Flask"
	@echo ""
	@echo "$(YELLOW)=== Bot (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫) ===$(NC)"
	@tail -10 logs/bot.log 2>/dev/null || echo "–ù–µ—Ç –ª–æ–≥–æ–≤ Bot"

logs-react:
	@tail -f logs/react.log

logs-flask:
	@tail -f logs/flask.log

logs-bot:
	@tail -f logs/bot.log

# =============================================================================
# üéØ –†–ê–ó–†–ê–ë–û–¢–ö–ê
# =============================================================================

install:
	@echo "$(BLUE)üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...$(NC)"
	@pip3 install -r requirements.txt
	@cd webapp && npm install
	@echo "$(GREEN)‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã$(NC)"

dev: install start

# =============================================================================
# üéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï
# =============================================================================

test-api:
	@echo "$(BLUE)üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...$(NC)"
	@curl -s http://localhost:$(FLASK_PORT)/api/health | jq .
	@curl -s http://localhost:$(FLASK_PORT)/api/latest?limit=3 | jq '.data | length'

test-react:
	@echo "$(BLUE)üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ React...$(NC)"
	@curl -s http://localhost:$(REACT_PORT) | grep -o '<title>.*</title>'

test: test-api test-react

# =============================================================================
# üéØ –°–¢–ê–¢–£–°
# =============================================================================

status:
	@echo "$(BLUE)üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:$(NC)"
	@echo ""
	@$(MAKE) check-ports
	@echo ""
	@if [ -f logs/react.pid ]; then echo "$(GREEN)‚úÖ React: –∑–∞–ø—É—â–µ–Ω$(NC)"; else echo "$(RED)‚ùå React: –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; fi
	@if [ -f logs/flask.pid ]; then echo "$(GREEN)‚úÖ Flask: –∑–∞–ø—É—â–µ–Ω$(NC)"; else echo "$(RED)‚ùå Flask: –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; fi
	@if [ -f logs/bot.pid ]; then echo "$(GREEN)‚úÖ Bot: –∑–∞–ø—É—â–µ–Ω$(NC)"; else echo "$(RED)‚ùå Bot: –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω$(NC)"; fi

# =============================================================================
# üéØ CLOUDFLARE –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø
# =============================================================================

cloudflare-config:
	@echo "$(BLUE)üåê –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Cloudflare Tunnel:$(NC)"
	@python3 -c "import sys; sys.path.append('.'); from config.cloudflare import get_deployment_info, validate_cloudflare_config; info = get_deployment_info(); print(''); [print(f'$(YELLOW){k:20}:$(NC) {v}') for k, v in info.items()]; print(''); print('$(GREEN)‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞$(NC)' if validate_cloudflare_config() else '$(RED)‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏—Ç –æ—à–∏–±–∫–∏$(NC)')"

update-config:
	@echo "$(BLUE)üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π Cloudflare...$(NC)"
	@python3 scripts/update_cloudflare_config.py
	@echo "$(GREEN)‚úÖ –í—Å–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!$(NC)"

smart-push:
	@echo "$(BLUE)üöÄ –£–º–Ω—ã–π push —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞...$(NC)"
	@./scripts/smart_push.sh

# =============================================================================
# üéØ –î–ï–§–û–õ–¢–ù–ê–Ø –ö–û–ú–ê–ù–î–ê
# =============================================================================

.DEFAULT_GOAL := help