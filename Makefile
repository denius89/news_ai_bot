# Makefile for news_ai_bot ‚Äî quick dev commands

PY?=python3

.PHONY: run-bot run-web run-digests run-events run-news test test-cov lint format check dev run-tests-bot check-db run-all stop-all restart-all status logs

# 1) Run Telegram bot
run-bot:
	$(PY) -m telegram_bot.bot

# 2) Run web app
run-web:
	$(PY) webapp.py

# 3) Run digests generator (AI, category economy, limit 5)
run-digests:
	$(PY) -m digests.generator --ai --limit 5 --category economy

# 4) Fetch and store events
run-events:
	$(PY) tools/fetch_and_store_events.py

# 5) Fetch and store news
run-news:
	$(PY) tools/fetch_and_store_news.py

# 6) Run tests (—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è)
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	@$(MAKE) prepare-test-env
	$(PY) -m pytest

# 7) Run tests with coverage (—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è)
test-cov:
	@echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å –ø–æ–∫—Ä—ã—Ç–∏–µ–º –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	@$(MAKE) prepare-test-env
	$(PY) -m pytest --cov --cov-report=term-missing

# 8) –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
prepare-test-env:
	@echo "üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤..."
	@$(PY) tools/port_manager.py --prepare
	@if [ $$? -ne 0 ]; then \
		echo "‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è"; \
		echo "üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: make cleanup-env"; \
		exit 1; \
	fi

# 9) –û—á–∏—Å—Ç–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
cleanup-env:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	@$(PY) tools/port_manager.py --cleanup

# 10) –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è
check-env:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	@$(PY) tools/port_manager.py --check

# 11) Lint
lint:
	flake8 .

# 12) Format (black)
format:
	black .

# 13) Check: lint + tests (—Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è)
check:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–¥–∞ –∏ —Ç–µ—Å—Ç–æ–≤..."
	@$(MAKE) prepare-test-env
	$(MAKE) lint
	$(MAKE) test

# 14) Run tests then bot (—Å –ø–æ–¥–≥–æ—Ç–æ–≤–∫–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è)
run-tests-bot:
	@$(MAKE) prepare-test-env
	$(MAKE) test
	$(MAKE) run-bot

# 15) Check database schema
check-db:
	$(PY) tools/check_database.py

# 16) Dev: run bot and web together
dev:
	$(MAKE) run-bot & \
	$(MAKE) run-web

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ–º–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ ===

# 14) –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã (–±–æ—Ç + WebApp)
run-all:
	$(PY) tools/run_all.py start

# 15) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
stop-all:
	$(PY) tools/run_all.py stop

# 16) –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
restart-all:
	$(PY) tools/run_all.py restart

# 17) –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
status:
	$(PY) tools/run_all.py status

# 18) –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
logs:
	@if command -v tail >/dev/null 2>&1; then \
		tail -n 100 -f logs/bot.log logs/webapp.log; \
	else \
		echo "üí° –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –æ—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª—ã:"; \
		echo "   - logs/bot.log"; \
		echo "   - logs/webapp.log"; \
		echo ""; \
		echo "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python tools/run_all.py logs"; \
	fi

# === –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞–º–∏ ===

# 19) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∑–∞–Ω—è—Ç—ã–µ –ø–æ—Ä—Ç—ã
check-ports:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ 8001 –∏ 5000..."
	@if lsof -i :8001 >/dev/null 2>&1; then \
		echo "‚ö†Ô∏è  –ü–æ—Ä—Ç 8001 –∑–∞–Ω—è—Ç:"; \
		lsof -i :8001; \
	else \
		echo "‚úÖ –ü–æ—Ä—Ç 8001 —Å–≤–æ–±–æ–¥–µ–Ω"; \
	fi
	@if lsof -i :5000 >/dev/null 2>&1; then \
		echo "‚ö†Ô∏è  –ü–æ—Ä—Ç 5000 –∑–∞–Ω—è—Ç:"; \
		lsof -i :5000; \
	else \
		echo "‚úÖ –ü–æ—Ä—Ç 5000 —Å–≤–æ–±–æ–¥–µ–Ω"; \
	fi

# 20) –û—Å–≤–æ–±–æ–¥–∏—Ç—å –ø–æ—Ä—Ç—ã
free-ports:
	@echo "üõë –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç—ã..."
	@if lsof -i :8001 >/dev/null 2>&1; then \
		echo "–£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 8001..."; \
		lsof -ti :8001 | xargs kill -9 2>/dev/null || true; \
	fi
	@if lsof -i :5000 >/dev/null 2>&1; then \
		echo "–£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É 5000..."; \
		lsof -ti :5000 | xargs kill -9 2>/dev/null || true; \
	fi
	@echo "‚úÖ –ü–æ—Ä—Ç—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã"

# 21) –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—É—Å–∫ WebApp
run-web-safe:
	@echo "üöÄ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—É—Å–∫ WebApp..."
	@$(MAKE) check-ports
	@if lsof -i :8001 >/dev/null 2>&1; then \
		echo "‚ö†Ô∏è  –ü–æ—Ä—Ç 8001 –∑–∞–Ω—è—Ç, –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º..."; \
		$(MAKE) free-ports; \
		sleep 2; \
	fi
	@$(MAKE) run-web

# 22) –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
dev-safe:
	@echo "üöÄ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
	@$(MAKE) free-ports
	@sleep 2
	@$(MAKE) run-all

# === –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ===

# 23) –ü–æ–ª–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-maintenance:
	@echo "üèóÔ∏è  –ü–æ–ª–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	$(PY) tools/database_maintenance.py

# 24) –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-cleanup:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	$(PY) tools/cleanup_database.py

# 25) –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-optimize:
	@echo "‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	$(PY) tools/optimize_database.py

# 26) –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db-check:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
	$(PY) tools/check_all_columns.py
	$(PY) tools/check_users_table.py

