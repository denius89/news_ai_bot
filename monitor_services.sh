#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–∏—Å–æ–≤
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
#   ./monitor_services.sh          - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —É–ø–∞–≤—à–∏–µ —Å–µ—Ä–≤–∏—Å—ã
#   */5 * * * * ./monitor_services.sh  - –¥–æ–±–∞–≤–∏—Ç—å –≤ crontab –¥–ª—è –∞–≤—Ç–æ–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
#
# –ê–≤—Ç–æ—Ä: PulseAI Team
# –í–µ—Ä—Å–∏—è: 2.0

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ —Å–∫—Ä–∏–ø—Ç–æ–≤
SCRIPT_LOG_DIR="logs/scripts"
mkdir -p "$SCRIPT_LOG_DIR"

# –§–∞–π–ª –ª–æ–≥–∞ –¥–ª—è —ç—Ç–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
LOG_FILE="$SCRIPT_LOG_DIR/monitor_services_$(date +%Y%m%d_%H%M%S).log"

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level="$1"
    shift
    local message="$@"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    echo "[$timestamp] [$level] $message" | tee -a "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å —Ü–≤–µ—Ç–æ–º –∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
log_info() {
    echo -e "${BLUE}$@${NC}"
    log "INFO" "$@"
}

log_success() {
    echo -e "${GREEN}$@${NC}"
    log "SUCCESS" "$@"
}

log_warning() {
    echo -e "${YELLOW}$@${NC}"
    log "WARNING" "$@"
}

log_error() {
    echo -e "${RED}$@${NC}"
    log "ERROR" "$@"
}

log_info "üîç –ú–û–ù–ò–¢–û–†–ò–ù–ì –°–ï–†–í–ò–°–û–í PULSEAI"
log_info "==============================="
log_info "–õ–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"
echo ""

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Flask
check_flask() {
    local response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8001/api/health 2>/dev/null)
    if [ "$response" = "200" ]; then
        log_success "‚úÖ Flask WebApp: —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $response)"
        return 0
    else
        log_error "‚ùå Flask WebApp: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (HTTP $response)"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram Bot
check_telegram_bot() {
    local processes=$(ps aux | grep "telegram_bot" | grep -v grep | wc -l)
    if [ "$processes" -gt 0 ]; then
        log_success "‚úÖ Telegram Bot: —Ä–∞–±–æ—Ç–∞–µ—Ç ($processes –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)"
        return 0
    else
        log_error "‚ùå Telegram Bot: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Cloudflare —Ç—É–Ω–Ω–µ–ª—è
check_cloudflare() {
    local processes=$(ps aux | grep "cloudflared" | grep -v grep | wc -l)
    if [ "$processes" -gt 0 ]; then
        log_success "‚úÖ Cloudflare Tunnel: —Ä–∞–±–æ—Ç–∞–µ—Ç ($processes –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)"
        return 0
    else
        log_error "‚ùå Cloudflare Tunnel: –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Flask
restart_flask() {
    log_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Flask WebApp..."
    
    pkill -f "src/webapp.py" 2>/dev/null
    sleep 3
    
    export PYTHONPATH="/Users/denisfedko/news_ai_bot:$PYTHONPATH"
    python3 src/webapp.py > logs/webapp.log 2>&1 &
    FLASK_PID=$!
    
    echo $FLASK_PID > .flask.pid
    log "INFO" "Flask WebApp –∑–∞–ø—É—â–µ–Ω —Å PID: $FLASK_PID"
    
    sleep 5
    
    if check_flask; then
        log_success "‚úÖ Flask WebApp —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
        return 0
    else
        log_error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Flask WebApp"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ Telegram Bot
restart_telegram_bot() {
    log_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ Telegram Bot..."
    
    pkill -f "telegram_bot" 2>/dev/null
    sleep 3
    
    export PYTHONPATH="/Users/denisfedko/news_ai_bot:$PYTHONPATH"
    python3 -m telegram_bot.bot > logs/bot.log 2>&1 &
    BOT_PID=$!
    
    echo $BOT_PID > .bot.pid
    log "INFO" "Telegram Bot –∑–∞–ø—É—â–µ–Ω —Å PID: $BOT_PID"
    
    sleep 5
    
    if check_telegram_bot; then
        log_success "‚úÖ Telegram Bot —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
        return 0
    else
        log_error "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å Telegram Bot"
        return 1
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor_services() {
    log_info "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ –Ω–∞ $(date):"
    log_info "-------------------------------"
    echo ""
    
    local flask_ok=0
    local telegram_ok=0
    local cloudflare_ok=0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã
    if check_flask; then
        flask_ok=1
    fi
    
    if check_telegram_bot; then
        telegram_ok=1
    fi
    
    if check_cloudflare; then
        cloudflare_ok=1
    fi
    
    echo ""
    log_info "-------------------------------"
    echo ""
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ
    if [ "$flask_ok" -eq 0 ]; then
        log_warning "‚ö†Ô∏è Flask WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å..."
        restart_flask
    fi
    
    if [ "$telegram_ok" -eq 0 ]; then
        log_warning "‚ö†Ô∏è Telegram Bot –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å..."
        restart_telegram_bot
    fi
    
    if [ "$cloudflare_ok" -eq 0 ]; then
        log_warning "‚ö†Ô∏è Cloudflare Tunnel –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        echo -e "${CYAN}üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: cloudflared tunnel --url http://localhost:8001${NC}"
        log "INFO" "Cloudflare Tunnel —Ç—Ä–µ–±—É–µ—Ç —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞"
    fi
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    echo ""
    if [ "$flask_ok" -eq 1 ] && [ "$telegram_ok" -eq 1 ] && [ "$cloudflare_ok" -eq 1 ]; then
        log_success "üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ!"
    else
        log_warning "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–µ—Ä–≤–∏—Å—ã —Ç—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è"
    fi
    
    echo ""
    echo -e "${CYAN}üìã –õ–æ–≥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞: $LOG_FILE${NC}"
}

# –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitor_services
