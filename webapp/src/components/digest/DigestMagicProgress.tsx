import { AnimatePresence, motion } from "framer-motion";
import { BookOpen, Brain, Briefcase, Cpu, FileText, Laugh, MessageCircle, Newspaper } from "lucide-react";
import { useEffect, useState } from "react";

const personalities = {
    analytical: {
        color: "from-blue-400 via-cyan-300 to-blue-500",
        icon: <Brain className="w-10 h-10 text-blue-400" />,
        phrases: [
            "–ü—Ä–æ–≤–æ–∂—É –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤–æ—Å—Ç–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤...",
            "–°—Ä–∞–≤–Ω–∏–≤–∞—é –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ –≤—ã—è–≤–ª—è—é –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏...",
            "–û—Ü–µ–Ω–∏–≤–∞—é –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∏ –≤–∞–∂–Ω–æ—Å—Ç—å...",
            "–§–æ—Ä–º–∏—Ä—É—é –æ–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö..."
        ]
    },
    business: {
        color: "from-amber-400 via-yellow-300 to-orange-400",
        icon: <Briefcase className="w-10 h-10 text-amber-400" />,
        phrases: [
            "–û—Ç–±–∏—Ä–∞—é –∫–ª—é—á–µ–≤—ã–µ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è...",
            "–ò—â—É —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è —Ä–µ—à–µ–Ω–∏–π –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π...",
            "–ü—Ä–æ–≤–µ—Ä—è—é –æ—Ç—á—ë—Ç—ã –∏ —Ç–µ–Ω–¥–µ–Ω—Ü–∏–∏...",
            "–°–æ–∑–¥–∞—é –¥–∞–π–¥–∂–µ—Å—Ç –≤ –¥–µ–ª–æ–≤–æ–º —Ç–æ–Ω–µ..."
        ]
    },
    meme: {
        color: "from-pink-400 via-purple-400 to-fuchsia-400",
        icon: <Laugh className="w-10 h-10 text-pink-400" />,
        phrases: [
            "–ü–µ—Ä–µ–≤–æ–∂—É –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ —è–∑—ã–∫ –º–µ–º–æ–≤ üòé",
            "–î–æ–±–∞–≤–ª—è—é –Ω–µ–º–Ω–æ–≥–æ —Å–∞—Ä–∫–∞–∑–º–∞...",
            "AI —Å —á—É–≤—Å—Ç–≤–æ–º —é–º–æ—Ä–∞ –Ω–∞ —Å–≤—è–∑–∏ ü§ñ",
            "–°–æ–±–∏—Ä–∞—é –≤–µ—Å—ë–ª—É—é —Å–≤–æ–¥–∫—É —Å–æ–±—ã—Ç–∏–π!"
        ]
    },

    // –ù–û–í–´–ï –°–¢–ò–õ–ò v2
    newsroom: {
        color: "from-slate-400 via-gray-300 to-slate-500",
        icon: <Newspaper className="w-10 h-10 text-slate-400" />,
        phrases: [
            "–°–æ–±–∏—Ä–∞—é —Ñ–∞–∫—Ç—ã –∏–∑ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ —Ü–∏—Ñ—Ä—ã...",
            "–ü—Ä–æ–≤–µ—Ä—è—é –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏...",
            "–§–æ—Ä–º–∏—Ä—É—é –∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É –≤ —Å—Ç–∏–ª–µ Reuters..."
        ]
    },

    magazine: {
        color: "from-violet-400 via-purple-300 to-indigo-400",
        icon: <BookOpen className="w-10 h-10 text-violet-400" />,
        phrases: [
            "–ò—â—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç...",
            "–ü—Ä–µ–≤—Ä–∞—â–∞—é —Ñ–∞–∫—Ç—ã –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é...",
            "–î–æ–±–∞–≤–ª—è—é –≥–ª—É–±–∏–Ω—É –∏ storytelling...",
            "–°–æ–∑–¥–∞—é –¥–∞–π–¥–∂–µ—Å—Ç –≤ —Å—Ç–∏–ª–µ The Atlantic..."
        ]
    },

    casual: {
        color: "from-teal-400 via-cyan-300 to-emerald-400",
        icon: <MessageCircle className="w-10 h-10 text-teal-400" />,
        phrases: [
            "–ü–µ—Ä–µ–≤–æ–∂—É –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ –ø—Ä–æ—Å—Ç–æ–π —è–∑—ã–∫...",
            "–£–±–∏—Ä–∞—é –≤—Å–µ —Å–ª–æ–∂–Ω–æ–µ –∏ —Å–∫—É—á–Ω–æ–µ...",
            "–î–µ–ª–∞—é –¥–∞–π–¥–∂–µ—Å—Ç –¥–ª—è —á—Ç–µ–Ω–∏—è –≤ –º–µ—Ç—Ä–æ üöá",
            "–§–æ—Ä–º–∏—Ä—É—é —É–¥–æ–±–Ω—É—é —Å–≤–æ–¥–∫—É –¥–ª—è Telegram..."
        ]
    },

    explanatory: {
        color: "from-indigo-400 via-blue-300 to-purple-400",
        icon: <FileText className="w-10 h-10 text-indigo-400" />,
        phrases: [
            "–û–±—ä—è—Å–Ω—è—é —Å–ª–æ–∂–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏...",
            "–î–æ–±–∞–≤–ª—è—é –∫–æ–Ω—Ç–µ–∫—Å—Ç –∏ –∏—Å—Ç–æ—Ä–∏—é –≤–æ–ø—Ä–æ—Å–∞...",
            "–†–∞–∑–±–∏—Ä–∞—é –ø—Ä–∏—á–∏–Ω—ã –∏ —Å–ª–µ–¥—Å—Ç–≤–∏—è —Å–æ–±—ã—Ç–∏–π...",
            "–î–µ–ª–∞—é –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ–Ω—è—Ç–Ω—ã–º–∏ –¥–ª—è –≤—Å–µ—Ö..."
        ]
    },

    technical: {
        color: "from-emerald-400 via-green-300 to-teal-400",
        icon: <Cpu className="w-10 h-10 text-emerald-400" />,
        phrases: [
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏ –∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏–∏...",
            "–ò–∑—É—á–∞—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –∏ –∞–ª–≥–æ—Ä–∏—Ç–º—ã...",
            "–°—Ä–∞–≤–Ω–∏–≤–∞—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ benchmark'–∏...",
            "–§–æ—Ä–º–∏—Ä—É—é –¥–∞–π–¥–∂–µ—Å—Ç –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤..."
        ]
    }
};

interface DigestMagicProgressProps {
    style: 'analytical' | 'business' | 'meme' | 'newsroom' | 'magazine' | 'casual' | 'explanatory' | 'technical';
    tone?: 'neutral' | 'insightful' | 'critical' | 'optimistic';
    isGenerating: boolean; // –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∏–∑ DigestPage
    onComplete?: () => void; // Callback –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
}

export const DigestMagicProgress: React.FC<DigestMagicProgressProps> = ({
    style = "analytical",
    tone = "neutral",
    isGenerating,
    onComplete
}) => {
    // –ì–∏–±—Ä–∏–¥–Ω—ã–π timing system - —Å–æ—Å—Ç–æ—è–Ω–∏—è
    const [showOverlay, setShowOverlay] = useState(false);
    const [isVisible, setIsVisible] = useState(false);
    const [isReady, setIsReady] = useState(false);
    const [minTimePassed, setMinTimePassed] = useState(false);
    const [showFlare, setShowFlare] = useState(false);
    const [phraseIndex, setPhraseIndex] = useState(0);

    // Check for reduced motion preference
    const prefersReducedMotion = typeof window !== 'undefined' &&
        window.matchMedia('(prefers-reduced-motion: reduce)').matches;

    // –ó–∞—â–∏—Ç–∞ –æ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π style
    const safeStyle = style && personalities[style as keyof typeof personalities] ? style : "analytical";
    const persona = personalities[safeStyle] || personalities.analytical;

    // –ê–¥–∞–ø—Ç–∞—Ü–∏—è —Ñ—Ä–∞–∑ –ø–æ —Ç–æ–Ω—É
    const getPhrases = (style: string, tone?: string) => {
        const basePersona = personalities[style as keyof typeof personalities] || personalities.analytical;

        if (!basePersona || !basePersona.phrases) {
            return ["–ì–µ–Ω–µ—Ä–∏—Ä—É—é –¥–∞–π–¥–∂–µ—Å—Ç..."];
        }

        if (tone === 'critical') {
            return [
                ...basePersona.phrases,
                "–ü—Ä–æ–≤–µ—Ä—è—é –ø—Ä–æ—Ç–∏–≤–æ—Ä–µ—á–∏—è –≤ –∏—Å—Ç–æ—á–Ω–∏–∫–∞—Ö...",
                "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–∫—Ä—ã—Ç—ã–µ –º–æ—Ç–∏–≤—ã..."
            ];
        }

        if (tone === 'optimistic') {
            return [
                ...basePersona.phrases,
                "–ò—â—É –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã...",
                "–í—ã–¥–µ–ª—è—é —É—Å–ø–µ—à–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è..."
            ];
        }

        return basePersona.phrases;
    };

    const adaptedPhrases = getPhrases(safeStyle, tone);

    // –ì–∏–±—Ä–∏–¥–Ω—ã–π timing system - –º–∏–Ω–∏–º—É–º 5s, –º–∞–∫—Å–∏–º—É–º 15s
    useEffect(() => {
        if (!isGenerating) return;

        // –ú–∏–Ω–∏–º—É–º 5 —Å–µ–∫—É–Ω–¥
        const minTimer = setTimeout(() => setMinTimePassed(true), 5000);

        // –ú–∞–∫—Å–∏–º—É–º 15 —Å–µ–∫—É–Ω–¥ - force complete
        const maxTimer = setTimeout(() => {
            setShowFlare(true);
            setTimeout(() => onComplete?.(), 800);
        }, 15000);

        return () => {
            clearTimeout(minTimer);
            clearTimeout(maxTimer);
        };
    }, [isGenerating, onComplete]);

    // –ö–æ–≥–¥–∞ API –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –∏ –º–∏–Ω–∏–º—É–º –ø—Ä–æ—à—ë–ª
    useEffect(() => {
        if (!isGenerating && minTimePassed) {
            setShowFlare(true);
            setTimeout(() => onComplete?.(), 800);
        }
    }, [isGenerating, minTimePassed, onComplete]);

    // –ü–æ–∫–∞–∑ overlay –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    useEffect(() => {
        if (isGenerating) {
            const timer = setTimeout(() => setShowOverlay(true), 120);
            return () => clearTimeout(timer);
        } else {
            setShowOverlay(false);
        }
    }, [isGenerating]);

    // –ê–Ω–∏–º–∞—Ü–∏—è –≤–æ –≤—Ç–æ—Ä–æ–π –∫–∞–¥—Ä —á–µ—Ä–µ–∑ requestAnimationFrame
    useEffect(() => {
        if (showOverlay) {
            requestAnimationFrame(() => {
                requestAnimationFrame(() => {
                    setIsReady(true);
                    requestAnimationFrame(() => {
                        setIsVisible(true);
                    });
                });
            });
        } else {
            setIsReady(false);
            setIsVisible(false);
        }
    }, [showOverlay]);

    // –°–º–µ–Ω–∞ —Ñ—Ä–∞–∑ –∫–∞–∂–¥—ã–µ 2.5s (—É—Å–∫–æ—Ä–µ–Ω–æ —Å 3s)
    useEffect(() => {
        if (!isVisible || adaptedPhrases.length === 0) return;

        const interval = setInterval(() => {
            setPhraseIndex(prev => (prev + 1) % adaptedPhrases.length);
        }, 2500);

        return () => clearInterval(interval);
    }, [isVisible, adaptedPhrases.length]);

    // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º overlay –µ—Å–ª–∏ –Ω–µ –Ω–∞—á–∞—Ç–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
    if (!showOverlay || !isGenerating) {
        return null;
    }

    return (
        <div
            className="fixed inset-0 z-[9999] transform-gpu"
            style={{
                opacity: isReady ? (isVisible ? 1 : 0) : 0,
                visibility: isReady ? (isVisible ? 'visible' : 'hidden') : 'hidden',
                willChange: 'opacity, transform',
                pointerEvents: isReady ? 'auto' : 'none'
            }}
        >
            {/* Gradient Flow Backdrop */}
            <motion.div
                className={`fixed inset-0 bg-gradient-to-br ${persona.color}
                    dark:from-[#0d0d0d] dark:via-[#1a1a1a] dark:to-[#222]
                    backdrop-blur-xl`}
                initial={{ opacity: 0 }}
                animate={{
                    opacity: isReady && isVisible ? 1 : 0,
                    backgroundPosition: ['0% 50%', '100% 50%', '0% 50%']
                }}
                exit={{ opacity: 0 }}
                transition={{
                    opacity: { duration: 0.4, ease: [0.23, 1, 0.32, 1] },
                    backgroundPosition: prefersReducedMotion ? {} : { duration: 8, repeat: Infinity, ease: 'linear' }
                }}
                style={{
                    willChange: 'opacity, background-position',
                    opacity: isReady ? undefined : 0,
                    backgroundSize: '200% 200%'
                }}
            />

            {/* Content Layer */}
            <motion.div
                className="fixed inset-0 flex flex-col items-center justify-center text-center px-6 transform-gpu"
                initial={{ opacity: 0, scale: 0.98 }}
                animate={{
                    opacity: isReady && isVisible ? 1 : 0,
                    scale: isReady && isVisible ? 1 : 0.98
                }}
                exit={{ opacity: 0, scale: 0.98 }}
                transition={{
                    duration: 0.4,
                    ease: [0.23, 1, 0.32, 1],
                    delay: 0.1
                }}
                style={{
                    willChange: 'opacity, transform',
                    opacity: isReady ? undefined : 0
                }}
            >
                {/* AI Core - –ø—É–ª—å—Å–∏—Ä—É—é—â–∏–π —Ü–µ–Ω—Ç—Ä */}
                <motion.div
                    className="w-20 h-20 rounded-full bg-white/10 blur-xl mb-6 transform-gpu"
                    initial={{ opacity: 0, scale: 0.8 }}
                    animate={{
                        opacity: isReady && isVisible ? (prefersReducedMotion ? 0.8 : [0.6, 1, 0.6]) : 0,
                        scale: isReady && isVisible ? (prefersReducedMotion ? 1 : [0.98, 1.02, 0.98]) : 0.8
                    }}
                    transition={{
                        opacity: prefersReducedMotion ? {} : { duration: 3, repeat: Infinity, ease: 'easeInOut' },
                        scale: prefersReducedMotion ? {} : { duration: 3, repeat: Infinity, ease: 'easeInOut' }
                    }}
                    style={{ willChange: 'opacity, transform' }}
                />

                {/* Dynamic Title */}
                <motion.h2
                    initial={{ opacity: 0, y: 20 }}
                    animate={{
                        opacity: isReady && isVisible ? 1 : 0,
                        y: isReady && isVisible ? 0 : 20
                    }}
                    transition={{ duration: 0.6, delay: 0.3, ease: "easeOut" }}
                    className="text-2xl font-semibold text-white mb-3 drop-shadow-lg"
                    style={{ willChange: 'opacity, transform' }}
                >
                    AI –¥—É–º–∞–µ—Ç –≤ —Å—Ç–∏–ª–µ "{safeStyle}"...
                </motion.h2>

                {/* Dynamic Phrases with improved animation */}
                <AnimatePresence mode="wait">
                    <motion.p
                        key={phraseIndex}
                        initial={{ opacity: 0, y: 10 }}
                        animate={{
                            opacity: isReady && isVisible ? [0, 1, 1, 0] : 0,
                            y: isReady && isVisible ? [10, 0, 0, -10] : 10
                        }}
                        transition={{ duration: 2.4, ease: "easeInOut" }}
                        className="text-white/90 text-base max-w-md px-4 leading-relaxed mb-5"
                        style={{ willChange: 'opacity, transform' }}
                    >
                        {adaptedPhrases[phraseIndex] || adaptedPhrases[0] || "–ì–µ–Ω–µ—Ä–∏—Ä—É—é –¥–∞–π–¥–∂–µ—Å—Ç..."}
                    </motion.p>
                </AnimatePresence>

                {/* Animated Progress Bar */}
                <motion.div
                    className="mt-4 h-1 w-3/4 bg-white/20 rounded-full overflow-hidden transform-gpu"
                    initial={{ opacity: 0, scaleX: 0 }}
                    animate={{
                        opacity: isReady && isVisible ? 1 : 0,
                        scaleX: isReady && isVisible ? 1 : 0
                    }}
                    transition={{
                        opacity: { duration: 0.6, delay: 0.45 },
                        scaleX: { duration: 3, repeat: Infinity, ease: "easeInOut", delay: 1.0 }
                    }}
                    style={{ willChange: 'opacity, transform' }}
                >
                    <motion.div
                        className="h-full w-full bg-gradient-to-r from-white/70 via-white/40 to-white/80"
                        animate={isReady && isVisible ? {
                            x: ["-100%", "100%"],
                            opacity: [0.7, 1, 0.7]
                        } : { opacity: 0 }}
                        transition={{
                            duration: 2,
                            repeat: Infinity,
                            ease: "easeInOut"
                        }}
                    />
                </motion.div>
            </motion.div>

            {/* Soft Particles - 6 –ø–ª–∞–≤–∞—é—â–∏—Ö —Ç–æ—á–µ–∫ */}
            {!prefersReducedMotion && (
                <div className="absolute inset-0 overflow-hidden pointer-events-none">
                    {[...Array(6)].map((_, i) => (
                        <motion.div
                            key={i}
                            className="absolute w-2 h-2 rounded-full bg-white/20 transform-gpu"
                            style={{
                                left: `${20 + i * 12}%`,
                                top: `${30 + (i % 3) * 15}%`,
                                opacity: isReady && isVisible ? undefined : 0
                            }}
                            animate={isReady && isVisible ? {
                                y: [-10, 10, -10],
                                opacity: [0.2, 0.4, 0.2],
                            } : { opacity: 0 }}
                            transition={{
                                duration: 5 + Math.random() * 3,
                                repeat: Infinity,
                                ease: "easeInOut",
                                delay: i * 0.3,
                            }}
                        />
                    ))}
                </div>
            )}

            {/* Flare Flash - —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤—Å–ø—ã—à–∫–∞ */}
            <AnimatePresence>
                {showFlare && (
                    <motion.div
                        className="absolute inset-0 bg-white/60 rounded-full blur-3xl transform-gpu"
                        initial={{ opacity: 0, scale: 0.8 }}
                        animate={{ opacity: [0, 1, 0], scale: [0.8, 1.5, 2] }}
                        exit={{ opacity: 0 }}
                        transition={{ duration: 0.8, ease: 'easeOut' }}
                        style={{ willChange: 'opacity, transform' }}
                    />
                )}
            </AnimatePresence>
        </div>
    );
};

export default DigestMagicProgress;
