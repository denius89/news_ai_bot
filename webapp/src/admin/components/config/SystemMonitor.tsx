/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏—Å—Ç–µ–º—ã
 */

import { Badge } from '@/components/ui/Badge';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card';
import { Progress } from '@/components/ui/Progress';
import { useSystemStatus } from '../../hooks/useSystemStatus';

export function SystemMonitor() {
    const { data: status, isLoading, error } = useSystemStatus();

    if (isLoading) {
        return <div className="p-8">–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏—Å—Ç–µ–º—ã...</div>;
    }

    if (error) {
        return (
            <div className="p-8">
                <div className="text-error">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {error.message}</div>
            </div>
        );
    }

    if (!status) {
        return <div className="p-8">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</div>;
    }

    const getStatusBadge = (serviceStatus: string) => {
        if (serviceStatus === 'ok') {
            return <Badge variant="success">–†–∞–±–æ—Ç–∞–µ—Ç</Badge>;
        }
        return <Badge variant="error">–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω</Badge>;
    };

    const getResourceColor = (percent: number) => {
        if (percent < 60) return 'bg-success';
        if (percent < 80) return 'bg-warning';
        return 'bg-error';
    };

    return (
        <div className="space-y-6">
            <div className="flex items-center justify-between">
                <h2 className="text-2xl font-bold">–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã</h2>
                <div className="text-sm text-muted">
                    –û–±–Ω–æ–≤–ª–µ–Ω–æ: {new Date(status.timestamp).toLocaleTimeString('ru-RU')}
                </div>
            </div>

            {/* –°–µ—Ä–≤–∏—Å—ã */}
            <Card>
                <CardHeader>
                    <CardTitle>–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤</CardTitle>
                </CardHeader>
                <CardContent>
                    <div className="space-y-4">
                        <div className="flex items-center justify-between p-3 border rounded">
                            <div className="flex items-center gap-3">
                                <div className="text-2xl">üåê</div>
                                <div>
                                    <div className="font-semibold">Flask WebApp</div>
                                    <div className="text-sm text-muted">
                                        PID —Ñ–∞–π–ª: {status.services.flask.pid_file}
                                    </div>
                                </div>
                            </div>
                            {getStatusBadge(status.services.flask.status)}
                        </div>

                        <div className="flex items-center justify-between p-3 border rounded">
                            <div className="flex items-center gap-3">
                                <div className="text-2xl">ü§ñ</div>
                                <div>
                                    <div className="font-semibold">Telegram Bot</div>
                                    <div className="text-sm text-muted">
                                        PID —Ñ–∞–π–ª: {status.services.bot.pid_file}
                                    </div>
                                </div>
                            </div>
                            {getStatusBadge(status.services.bot.status)}
                        </div>

                        <div className="flex items-center justify-between p-3 border rounded">
                            <div className="flex items-center gap-3">
                                <div className="text-2xl">üíæ</div>
                                <div>
                                    <div className="font-semibold">PostgreSQL Database</div>
                                    <div className="text-sm text-muted">
                                        Supabase / PostgreSQL
                                    </div>
                                </div>
                            </div>
                            {getStatusBadge(status.services.database.status)}
                        </div>
                    </div>
                </CardContent>
            </Card>

            {/* –†–µ—Å—É—Ä—Å—ã */}
            <Card>
                <CardHeader>
                    <CardTitle>–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã</CardTitle>
                </CardHeader>
                <CardContent>
                    <div className="space-y-6">
                        {/* CPU */}
                        <div>
                            <div className="flex items-center justify-between mb-2">
                                <div className="text-sm font-semibold">–ó–∞–≥—Ä—É–∑–∫–∞ CPU</div>
                                <div className="text-sm font-mono">{status.resources.cpu_percent}%</div>
                            </div>
                            <Progress
                                value={status.resources.cpu_percent}
                                className={getResourceColor(status.resources.cpu_percent)}
                            />
                        </div>

                        {/* Memory */}
                        <div>
                            <div className="flex items-center justify-between mb-2">
                                <div className="text-sm font-semibold">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏</div>
                                <div className="text-sm font-mono">
                                    {status.resources.memory_used_mb.toFixed(0)} MB /
                                    {' '}{(status.resources.memory_used_mb + status.resources.memory_available_mb).toFixed(0)} MB
                                    {' '}({status.resources.memory_percent}%)
                                </div>
                            </div>
                            <Progress
                                value={status.resources.memory_percent}
                                className={getResourceColor(status.resources.memory_percent)}
                            />
                        </div>

                        {/* Disk */}
                        <div>
                            <div className="flex items-center justify-between mb-2">
                                <div className="text-sm font-semibold">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞</div>
                                <div className="text-sm font-mono">
                                    {status.resources.disk_free_gb} GB free ({status.resources.disk_percent}% used)
                                </div>
                            </div>
                            <Progress
                                value={status.resources.disk_percent}
                                className={getResourceColor(status.resources.disk_percent)}
                            />
                        </div>
                    </div>
                </CardContent>
            </Card>

            {/* Uptime */}
            <Card>
                <CardHeader>
                    <CardTitle>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ</CardTitle>
                </CardHeader>
                <CardContent>
                    <div className="grid grid-cols-2 gap-4">
                        <div>
                            <div className="text-sm text-muted mb-1">–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã</div>
                            <div className="text-2xl font-mono">{status.uptime}</div>
                        </div>
                        <div>
                            <div className="text-sm text-muted mb-1">–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã (—Å–µ–∫—É–Ω–¥—ã)</div>
                            <div className="text-2xl font-mono">{status.uptime_seconds.toLocaleString()}</div>
                        </div>
                    </div>
                </CardContent>
            </Card>
        </div>
    );
}
