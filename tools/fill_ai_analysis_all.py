#!/usr/bin/env python3
"""
–ó–∞–ø–æ–ª–Ω—è–µ—Ç AI –∞–Ω–∞–ª–∏–∑ (importance, credibility) –¥–ª—è –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
"""

import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent))

from database.db_models import supabase, safe_execute
from ai_modules.importance import evaluate_importance
from ai_modules.credibility import evaluate_credibility

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)


def get_news_without_ai_analysis():
    """–ü–æ–ª—É—á–∞–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ –±–µ–∑ AI –∞–Ω–∞–ª–∏–∑–∞."""
    if not supabase:
        logger.error("Supabase –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        return []

    try:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –≥–¥–µ importance –∏–ª–∏ credibility —Ä–∞–≤–Ω—ã 0 –∏–ª–∏ NULL
        result = safe_execute(
            supabase.table("news")
            .select("id, uid, title, content, source, category, subcategory")
            .or_("importance.is.null,importance.eq.0,credibility.is.null,credibility.eq.0")
            .limit(100)  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ 100 –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞ —Ä–∞–∑
        )

        return result.data or []
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        return []


def update_news_ai_analysis(news_id: int, importance: float, credibility: float):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç AI –∞–Ω–∞–ª–∏–∑ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏."""
    if not supabase:
        return False

    try:
        safe_execute(
            supabase.table("news")
            .update({"importance": importance, "credibility": credibility})
            .eq("id", news_id)
        )
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏ {news_id}: {e}")
        return False


def analyze_news_ai(news_item):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–≤–æ—Å—Ç—å —Å –ø–æ–º–æ—â—å—é AI."""
    try:
        # –û—Ü–µ–Ω–∫–∞ –≤–∞–∂–Ω–æ—Å—Ç–∏ - –ø–µ—Ä–µ–¥–∞–µ–º –≤–µ—Å—å –æ–±—ä–µ–∫—Ç –Ω–æ–≤–æ—Å—Ç–∏
        importance = evaluate_importance(news_item)

        # –û—Ü–µ–Ω–∫–∞ –¥–æ—Å—Ç–æ–≤–µ—Ä–Ω–æ—Å—Ç–∏ - –ø–µ—Ä–µ–¥–∞–µ–º –≤–µ—Å—å –æ–±—ä–µ–∫—Ç –Ω–æ–≤–æ—Å—Ç–∏
        credibility = evaluate_credibility(news_item)

        return importance, credibility

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ AI –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –Ω–æ–≤–æ—Å—Ç–∏ {news_item.get('id')}: {e}")
        return 0.0, 0.0


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    logger.info("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ AI –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è –≤—Å–µ—Ö –Ω–æ–≤–æ—Å—Ç–µ–π")

    total_processed = 0
    total_updated = 0

    while True:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –±–µ–∑ AI –∞–Ω–∞–ª–∏–∑–∞
        news_items = get_news_without_ai_analysis()

        if not news_items:
            logger.info("‚úÖ –í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
            break

        logger.info(f"üì∞ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º {len(news_items)} –Ω–æ–≤–æ—Å—Ç–µ–π...")

        for news_item in news_items:
            try:
                # AI –∞–Ω–∞–ª–∏–∑
                importance, credibility = analyze_news_ai(news_item)

                # –û–±–Ω–æ–≤–ª—è–µ–º –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                if update_news_ai_analysis(news_item["id"], importance, credibility):
                    total_updated += 1
                    logger.info(
                        f"‚úÖ {news_item['id']}: importance={importance:.2f}, credibility={credibility:.2f}"
                    )
                else:
                    logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å {news_item['id']}")

                total_processed += 1

            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏ {news_item.get('id')}: {e}")
                continue

        logger.info(f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_processed}, –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {total_updated}")

        # –ï—Å–ª–∏ –Ω–æ–≤–æ—Å—Ç–µ–π –º–µ–Ω—å—à–µ 100, –∑–Ω–∞—á–∏—Ç —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –ø–∞—Ä—Ç–∏—è
        if len(news_items) < 100:
            break

    logger.info(f"üéâ –ó–∞–≤–µ—Ä—à–µ–Ω–æ! –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {total_processed}, –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {total_updated}")


if __name__ == "__main__":
    main()
