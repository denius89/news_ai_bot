#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ UI –∏ API.
"""

import sys
import json
import requests
from pathlib import Path

# Add project root to path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))


def test_api_subcategories():
    """–¢–µ—Å—Ç API endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π."""

    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API –¥–ª—è —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π...")

    try:
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π
        response = requests.get("http://localhost:5000/api/digests/categories")

        if response.status_code == 200:
            data = response.json()
            print("‚úÖ API –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω")

            if "subcategories" in data.get("data", {}):
                subcategories = data["data"]["subcategories"]
                print(f"‚úÖ –°—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–∞–π–¥–µ–Ω—ã: {list(subcategories.keys())}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                if "crypto" in subcategories:
                    crypto_subs = subcategories["crypto"]
                    print(f"üìä Crypto —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {list(crypto_subs.keys())}")

                    expected_subs = ["bitcoin", "ethereum", "defi", "nft"]
                    for sub in expected_subs:
                        if sub in crypto_subs:
                            print(f"  ‚úÖ {sub}: {crypto_subs[sub]}")
                        else:
                            print(f"  ‚ùå {sub}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
                else:
                    print("‚ùå Crypto —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            else:
                print("‚ùå –°—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –æ—Ç–≤–µ—Ç–µ")

        else:
            print(f"‚ùå API –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"Response: {response.text}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API: {e}")


def test_generate_with_subcategory():
    """–¢–µ—Å—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–π–¥–∂–µ—Å—Ç–∞ —Å —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π."""

    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é —Å —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π...")

    test_data = {
        "category": "crypto",
        "subcategory": "bitcoin",  # –ù–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä!
        "style": "analytical",
        "period": "today",
        "length": "medium",
        "limit": 5,
        "user_id": "test_user",
        "save": False,
        "use_rag": True,
        "use_personalization": True,
        "audience": "general",
    }

    try:
        response = requests.post(
            "http://localhost:5000/api/digests/generate", headers={"Content-Type": "application/json"}, json=test_data
        )

        if response.status_code == 200:
            data = response.json()
            if data.get("status") == "success":
                print("‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–µ–π —É—Å–ø–µ—à–Ω–∞")
                digest = data.get("data", {}).get("digest", "")
                if digest:
                    print(f"üìù –î–ª–∏–Ω–∞ –¥–∞–π–¥–∂–µ—Å—Ç–∞: {len(digest)} —Å–∏–º–≤–æ–ª–æ–≤")
                    print(f"üìÑ –ü—Ä–µ–≤—å—é: {digest[:200]}...")
                else:
                    print("‚ö†Ô∏è –î–∞–π–¥–∂–µ—Å—Ç –ø—É—Å—Ç–æ–π")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {data}")
        else:
            print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"Response: {response.text}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: {e}")


def test_prompts_v2_subcategories():
    """–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –≤ prompts_v2.py."""

    print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º prompts_v2.py —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–∏...")

    try:
        from digests.prompts_v2 import CATEGORY_CARDS, get_subcategory_config, get_available_subcategories

        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è crypto
        crypto_subs = get_available_subcategories("crypto")
        print(f"‚úÖ Crypto —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {crypto_subs}")

        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        btc_config = get_subcategory_config("crypto", "bitcoin")
        print(f"‚úÖ Bitcoin –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {btc_config}")

        expected_subs = ["bitcoin", "ethereum", "defi", "nft"]
        for sub in expected_subs:
            if sub in crypto_subs:
                config = get_subcategory_config("crypto", sub)
                print(f"  ‚úÖ {sub}: {config.get('focus', '–ù–µ—Ç focus')}")
            else:
                print(f"  ‚ùå {sub}: –Ω–µ –Ω–∞–π–¥–µ–Ω")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è prompts_v2: {e}")


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    try:
        response = requests.get("http://localhost:5000/api/digests/categories", timeout=5)
        is_server_running = response.status_code in [200, 404, 401]
    except (requests.RequestException, ConnectionError, requests.Timeout):
        is_server_running = False

    if is_server_running:
        test_api_subcategories()
        test_generate_with_subcategory()
    else:
        print("‚ö†Ô∏è –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, —Ç–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ prompts_v2.py")

    test_prompts_v2_subcategories()

    print("\n‚úÖ –¢–µ—Å—Ç—ã —Å—É–±–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")
