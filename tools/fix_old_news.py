#!/usr/bin/env python3

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ —Å—Ç–∞—Ä—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –±–∞–∑–µ Supabase.
–ù–∞–ø—Ä–∏–º–µ—Ä: –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ credibility / importance –¥–ª—è –Ω–æ–≤–æ—Å—Ç–µ–π,
—É –∫–æ—Ç–æ—Ä—ã—Ö —ç—Ç–∏ –ø–æ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.
"""

import os
from datetime import datetime, timezone
from typing import Optional

from dotenv import load_dotenv
from supabase import create_client

from database.db_models import enrich_news_with_ai


def get_supabase_client():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–ª–∏–µ–Ω—Ç–∞ Supabase."""
    load_dotenv()
    url = os.getenv("SUPABASE_URL")
    key = os.getenv("SUPABASE_KEY")

    if not url or not key:
        raise RuntimeError("SUPABASE_URL –∏ SUPABASE_KEY –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ .env")

    return create_client(url, key)


def fix_old_news(limit: Optional[int] = 50):
    """
    –ù–∞—Ö–æ–¥–∏—Ç —Å—Ç–∞—Ä—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –±–µ–∑ credibility/importance
    –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏—Ö —á–µ—Ä–µ–∑ AI-–º–æ–¥—É–ª–∏.
    """
    client = get_supabase_client()

    query = client.table("news").select("*").is_("credibility", None).limit(limit)

    response = query.execute()
    items = response.data or []

    if not items:
        print("‚ö†Ô∏è –ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è")
        return

    print(f"üîÑ –ù–∞–π–¥–µ–Ω–æ {len(items)} –Ω–æ–≤–æ—Å—Ç–µ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")

    updates = []
    for item in items:
        enriched = enrich_news_with_ai(item)
        enriched["updated_at"] = datetime.now(timezone.utc).isoformat()
        updates.append(enriched)

    res = client.table("news").upsert(updates, on_conflict="uid").execute()
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {len(res.data or [])} –Ω–æ–≤–æ—Å—Ç–µ–π")


def main():
    fix_old_news(limit=50)


if __name__ == "__main__":
    main()
