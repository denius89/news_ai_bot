#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏ subcategory —á–µ—Ä–µ–∑ Supabase API.
"""

import os
import sys
import requests
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

from dotenv import load_dotenv  # noqa: E402

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv(project_root / ".env")


def apply_migration():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ Supabase API."""

    supabase_url = os.getenv("SUPABASE_URL")
    supabase_key = os.getenv("SUPABASE_KEY")

    if not supabase_url or not supabase_key:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ SUPABASE_URL –∏–ª–∏ SUPABASE_KEY")
        return False

    print("üîß –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é subcategory...")

    # SQL –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
    sql_commands = [
        "ALTER TABLE news ADD COLUMN IF NOT EXISTS subcategory TEXT;",
        "ALTER TABLE events ADD COLUMN IF NOT EXISTS subcategory TEXT;",
        "CREATE INDEX IF NOT EXISTS idx_news_subcategory ON news (subcategory);",
        "CREATE INDEX IF NOT EXISTS idx_events_subcategory ON events (subcategory);",
        "CREATE INDEX IF NOT EXISTS idx_news_category_subcategory ON news (category, subcategory);",
        "CREATE INDEX IF NOT EXISTS idx_events_category_subcategory ON events (category, subcategory);",
    ]

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞–ø–∏—Å–µ–π
    update_commands = [
        "UPDATE news SET subcategory = 'general' WHERE subcategory IS NULL AND category = 'crypto';",
        "UPDATE news SET subcategory = 'general' WHERE subcategory IS NULL AND category = 'economy';",
        "UPDATE news SET subcategory = 'general' WHERE subcategory IS NULL AND category = 'world';",
        "UPDATE news SET subcategory = 'general' WHERE subcategory IS NULL AND category = 'technology';",
        "UPDATE news SET subcategory = 'general' WHERE subcategory IS NULL AND category = 'politics';",
        "UPDATE events SET subcategory = 'general' WHERE subcategory IS NULL;",
    ]

    headers = {
        "apikey": supabase_key,
        "Authorization": f"Bearer {supabase_key}",
        "Content-Type": "application/json",
    }

    # –ü–æ–ª—É—á–∞–µ–º URL –¥–ª—è SQL –∑–∞–ø—Ä–æ—Å–æ–≤
    sql_url = f"{supabase_url}/rest/v1/rpc/exec_sql"

    try:
        # –ü—Ä–∏–º–µ–Ω—è–µ–º SQL –∫–æ–º–∞–Ω–¥—ã
        for i, sql in enumerate(sql_commands):
            print(f"üîß –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–∞–Ω–¥—É {i+1}/{len(sql_commands)}: {sql[:50]}...")

            payload = {"sql": sql}
            response = requests.post(sql_url, json=payload, headers=headers)

            if response.status_code not in [200, 201]:
                print(f"‚ö†Ô∏è –ö–æ–º–∞–Ω–¥–∞ {i+1} –≤–µ—Ä–Ω—É–ª–∞ —Å—Ç–∞—Ç—É—Å {response.status_code}: {response.text}")
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã –º–æ–≥—É—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        for i, sql in enumerate(update_commands):
            print(f"üîß –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å–∏ {i+1}/{len(update_commands)}: {sql[:50]}...")

            payload = {"sql": sql}
            response = requests.post(sql_url, json=payload, headers=headers)

            if response.status_code not in [200, 201]:
                print(f"‚ö†Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ {i+1} –≤–µ—Ä–Ω—É–ª–æ —Å—Ç–∞—Ç—É—Å {response.status_code}: {response.text}")

        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False


def test_migration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ –º–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ."""

    from database.db_models import supabase

    if not supabase:
        print("‚ùå Supabase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return False

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É news
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É news...")
        result = supabase.table('news').select('*').limit(1).execute()

        if result.data:
            sample = result.data[0]
            if 'subcategory' in sample:
                print("‚úÖ –ü–æ–ª–µ subcategory –≤ —Ç–∞–±–ª–∏—Ü–µ news: OK")
            else:
                print("‚ùå –ü–æ–ª–µ subcategory –≤ —Ç–∞–±–ª–∏—Ü–µ news: –û–¢–°–£–¢–°–¢–í–£–ï–¢")
                return False

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É events
        print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É events...")
        result = supabase.table('events').select('*').limit(1).execute()

        if result.data:
            sample = result.data[0]
            if 'subcategory' in sample:
                print("‚úÖ –ü–æ–ª–µ subcategory –≤ —Ç–∞–±–ª–∏—Ü–µ events: OK")
            else:
                print("‚ùå –ü–æ–ª–µ subcategory –≤ —Ç–∞–±–ª–∏—Ü–µ events: –û–¢–°–£–¢–°–¢–í–£–ï–¢")
                return False

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç–∞–≤–∫—É —Å subcategory
        print("üîß –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å—Ç–∞–≤–∫—É —Å subcategory...")
        test_data = {
            'title': 'Test News with Subcategory',
            'content': 'Test content',
            'source': 'Test Source',
            'published_at': '2025-01-01T00:00:00Z',
            'category': 'crypto',
            'subcategory': 'bitcoin',
        }

        result = supabase.table('news').insert(test_data).execute()

        if result.data:
            print("‚úÖ –í—Å—Ç–∞–≤–∫–∞ —Å subcategory —Ä–∞–±–æ—Ç–∞–µ—Ç!")

            # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
            supabase.table('news').delete().eq('title', 'Test News with Subcategory').execute()
            print("üßπ –¢–µ—Å—Ç–æ–≤–∞—è –∑–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞")
            return True
        else:
            print("‚ùå –í—Å—Ç–∞–≤–∫–∞ —Å subcategory –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False


if __name__ == "__main__":
    print("üöÄ –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ subcategory...")

    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –ø—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏—é
    migration_success = apply_migration()

    if migration_success:
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–∏–≥—Ä–∞—Ü–∏—é...")
        test_success = test_migration()

        if test_success:
            print("\n‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            print("üéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–µ subcategory –≤ –∫–æ–¥–µ")
        else:
            print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞, –Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ –ø—Ä–æ—à–ª–æ")
            sys.exit(1)
    else:
        print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—å SQL –≤—Ä—É—á–Ω—É—é —á–µ—Ä–µ–∑ Supabase Dashboard")
        sys.exit(1)
