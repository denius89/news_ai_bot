#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–≤–µ–¥–µ–Ω–∏—è –ø–æ—Ä—è–¥–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
–£–¥–∞–ª—è–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç—ã, –æ—á–∏—â–∞–µ—Ç —Å—Ç–∞—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ, –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç –∏–Ω–¥–µ–∫—Å—ã.
"""

import os
import sys
from pathlib import Path
from datetime import datetime, timedelta
from dotenv import load_dotenv
from supabase import create_client

# Add project root to Python path
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))


def cleanup_database():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    load_dotenv()

    url = os.getenv('SUPABASE_URL')
    key = os.getenv('SUPABASE_KEY')

    if not url or not key:
        print("‚ùå SUPABASE_URL or SUPABASE_KEY not found in environment")
        return False

    supabase = create_client(url, key)

    print("üßπ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–≤–µ–¥–µ–Ω–∏–µ –ø–æ—Ä—è–¥–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    print("=" * 60)

    # 1. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)
    print("\nüì∞ 1. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π...")
    try:
        thirty_days_ago = datetime.utcnow() - timedelta(days=30)
        result = (
            supabase.table('news')
            .delete()
            .lt('published_at', thirty_days_ago.isoformat())
            .execute()
        )
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö –Ω–æ–≤–æ—Å—Ç–µ–π: {len(result.data) if result.data else 0}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")

    # 2. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–æ–±—ã—Ç–∏–π (—Å—Ç–∞—Ä—à–µ 60 –¥–Ω–µ–π)
    print("\nüìÖ 2. –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–æ–±—ã—Ç–∏–π...")
    try:
        sixty_days_ago = datetime.utcnow() - timedelta(days=60)
        result = (
            supabase.table('events').delete().lt('event_time', sixty_days_ago.isoformat()).execute()
        )
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö —Å–æ–±—ã—Ç–∏–π: {len(result.data) if result.data else 0}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —Å–æ–±—ã—Ç–∏–π: {e}")

    # 3. –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
    print("\nüîî 3. –û—á–∏—Å—Ç–∫–∞ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    try:
        week_ago = datetime.utcnow() - timedelta(days=7)
        result = (
            supabase.table('user_notifications')
            .delete()
            .eq('read', True)
            .lt('timestamp', week_ago.isoformat())
            .execute()
        )
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {len(result.data) if result.data else 0}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")

    # 4. –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≤ –Ω–æ–≤–æ—Å—Ç—è—Ö –ø–æ uid
    print("\nüîÑ 4. –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–æ–≤–æ—Å—Ç–µ–π...")
    try:
        # –ù–∞–π–¥–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        result = supabase.table('news').select('uid').execute()
        if result.data:
            uid_counts = {}
            for item in result.data:
                uid = item.get('uid')
                if uid:
                    uid_counts[uid] = uid_counts.get(uid, 0) + 1

            duplicates = [uid for uid, count in uid_counts.items() if count > 1]
            print(f"   üìä –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ uid: {len(duplicates)}")

            # –£–¥–∞–ª–∏–º –¥—É–±–ª–∏–∫–∞—Ç—ã (–æ—Å—Ç–∞–≤–∏–º —Ç–æ–ª—å–∫–æ —Å–∞–º—É—é –Ω–æ–≤—É—é)
            for uid in duplicates:
                # –ü–æ–ª—É—á–∏–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —ç—Ç–∏–º uid, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ created_at
                items = (
                    supabase.table('news')
                    .select('*')
                    .eq('uid', uid)
                    .order('created_at', desc=True)
                    .execute()
                )
                if items.data and len(items.data) > 1:
                    # –£–¥–∞–ª–∏–º –≤—Å–µ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π (—Å–∞–º–æ–π –Ω–æ–≤–æ–π)
                    for item in items.data[1:]:
                        supabase.table('news').delete().eq('id', item['id']).execute()

            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {len(duplicates)}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {e}")

    # 5. –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –≤ —Å–æ–±—ã—Ç–∏—è—Ö –ø–æ event_id
    print("\nüîÑ 5. –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —Å–æ–±—ã—Ç–∏–π...")
    try:
        # –ù–∞–π–¥–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
        result = supabase.table('events').select('event_id').execute()
        if result.data:
            event_id_counts = {}
            for item in result.data:
                event_id = item.get('event_id')
                if event_id:
                    event_id_counts[event_id] = event_id_counts.get(event_id, 0) + 1

            duplicates = [event_id for event_id, count in event_id_counts.items() if count > 1]
            print(f"   üìä –ù–∞–π–¥–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ event_id: {len(duplicates)}")

            # –£–¥–∞–ª–∏–º –¥—É–±–ª–∏–∫–∞—Ç—ã (–æ—Å—Ç–∞–≤–∏–º —Ç–æ–ª—å–∫–æ —Å–∞–º—É—é –Ω–æ–≤—É—é)
            for event_id in duplicates:
                # –ü–æ–ª—É—á–∏–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å —ç—Ç–∏–º event_id, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ created_at
                items = (
                    supabase.table('events')
                    .select('*')
                    .eq('event_id', event_id)
                    .order('created_at', desc=True)
                    .execute()
                )
                if items.data and len(items.data) > 1:
                    # –£–¥–∞–ª–∏–º –≤—Å–µ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π (—Å–∞–º–æ–π –Ω–æ–≤–æ–π)
                    for item in items.data[1:]:
                        supabase.table('events').delete().eq('id', item['id']).execute()

            print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤: {len(duplicates)}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ —Å–æ–±—ã—Ç–∏–π: {e}")

    # 6. –û—á–∏—Å—Ç–∫–∞ –ø—É—Å—Ç—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤
    print("\nüìã 6. –û—á–∏—Å—Ç–∫–∞ –ø—É—Å—Ç—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤...")
    try:
        result = supabase.table('digests').delete().is_('summary', 'null').execute()
        print(f"   ‚úÖ –£–¥–∞–ª–µ–Ω–æ –ø—É—Å—Ç—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤: {len(result.data) if result.data else 0}")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤: {e}")

    # 7. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
    print("\nüìä 7. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏:")
    print("-" * 40)

    tables = ['news', 'events', 'users', 'digests', 'user_notifications']
    for table in tables:
        try:
            result = supabase.table(table).select('*', count='exact').limit(1).execute()
            count = result.count
            print(f"   üìä {table}: {count} –∑–∞–ø–∏—Å–µ–π")
        except Exception as e:
            print(f"   ‚ùå {table}: {e}")

    print("\n‚úÖ –û—á–∏—Å—Ç–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    return True


if __name__ == "__main__":
    cleanup_database()
