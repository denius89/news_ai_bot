import os
import argparse
from supabase import create_client
from dotenv import load_dotenv

def show_latest_news(limit: int = 5, source: str = None):
    """
    –í—ã–≤–æ–¥–∏—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ N –Ω–æ–≤–æ—Å—Ç–µ–π –∏–∑ –±–∞–∑—ã Supabase.
    –ú–æ–∂–Ω–æ —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –ø–æ source (crypto, economy, all).
    """
    load_dotenv()
    url = os.getenv("SUPABASE_URL")
    key = os.getenv("SUPABASE_KEY")

    if not url or not key:
        print("‚ùå –û—à–∏–±–∫–∞: SUPABASE_URL –∏ SUPABASE_KEY –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ .env")
        return

    client = create_client(url, key)

    query = client.table("news").select("*").order("id", desc=True).limit(limit)

    if source and source != "all":
        query = query.eq("source", source)

    response = query.execute()

    if not response.data:
        print("‚ö†Ô∏è –ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return

    print(f"üì∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ {len(response.data)} –Ω–æ–≤–æ—Å—Ç–µ–π{' –¥–ª—è ' + source if source else ''}:\n")
    for item in response.data:
        print(f"- {item.get('title')}")
        print(f"  üìÖ {item.get('published_at')}")
        print(f"  ‚úÖ Credibility: {item.get('credibility')}, Importance: {item.get('importance')}")
        print(f"  üîó {item.get('link')}\n")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –±–∞–∑—ã Supabase")
    parser.add_argument("--limit", type=int, default=5, help="–°–∫–æ–ª—å–∫–æ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ–∫–∞–∑–∞—Ç—å")
    parser.add_argument("--source", type=str, default="all", choices=["all", "crypto", "economy"], help="–ò—Å—Ç–æ—á–Ω–∏–∫ –Ω–æ–≤–æ—Å—Ç–µ–π")
    args = parser.parse_args()

    show_latest_news(limit=args.limit, source=args.source)