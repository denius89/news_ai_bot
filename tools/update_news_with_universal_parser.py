#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ RSS –ø–∞—Ä—Å–µ—Ä–∞.
"""

from database.service import get_async_service
from parsers.universal_rss_parser import UniversalRSSParser
import sys
from pathlib import Path
import logging
import asyncio
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent.parent))


# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO, format="%(asctime)s - %(levelname)s - %(message)s")
logger = logging.getLogger(__name__)


async def update_news_with_universal_parser():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –Ω–æ–≤–æ—Å—Ç–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –ø–∞—Ä—Å–µ—Ä–∞."""

    print("üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π —Å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º –ø–∞—Ä—Å–µ—Ä–æ–º...\n")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–∞—Ä—Å–µ—Ä
    parser = UniversalRSSParser()
    db_service = get_async_service()

    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ –ø–∞—Ä—Å–∏–º –∏—Ö
        print("üì∞ –ü–∞—Ä—Å–∏–Ω–≥ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤...")
        all_news = parser.fetch_all_sources(per_source_limit=10)  # –õ–∏–º–∏—Ç 10 –Ω–æ–≤–æ—Å—Ç–µ–π –Ω–∞ –∏—Å—Ç–æ—á–Ω–∏–∫

        if not all_news:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏")
            return

        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(all_news)} –Ω–æ–≤–æ—Å—Ç–µ–π –æ—Ç –ø–∞—Ä—Å–µ—Ä–∞")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        print("üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–µ–π –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")

        saved_count = 0
        for news_item in all_news:
            try:
                # –î–æ–±–∞–≤–ª—è–µ–º AI –∞–Ω–∞–ª–∏–∑ (–ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –±—É–¥—É—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –ø–æ–∑–∂–µ)
                news_item["importance"] = 0.0
                news_item["credibility"] = 0.0

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É
                await db_service.async_upsert_news([news_item])
                saved_count += 1

                if saved_count % 50 == 0:
                    print(f"   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {saved_count} –Ω–æ–≤–æ—Å—Ç–µ–π...")

            except Exception as e:
                logger.warning(
                    f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–∏ {news_item.get('title', 'Unknown')}: {e}")
                continue

        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ {saved_count} –Ω–æ–≤–æ—Å—Ç–µ–π")

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = {}
        for news_item in all_news:
            cat = news_item.get("category", "unknown")
            if cat not in categories:
                categories[cat] = 0
            categories[cat] += 1

        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:")
        for cat, count in categories.items():
            print(f"   {cat}: {count} –Ω–æ–≤–æ—Å—Ç–µ–π")

        print(f"\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        raise
    finally:
        parser.close()


if __name__ == "__main__":
    asyncio.run(update_news_with_universal_parser())
