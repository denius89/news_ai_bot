-- Migration: Performance RPC Functions
-- Date: 2025-01-18
-- Purpose: –î–æ–±–∞–≤–∏—Ç—å RPC —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ N+1 queries –∏ –∞–≥—Ä–µ–≥–∞—Ü–∏–π
-- –ê–≤—Ç–æ—Ä: AI Assistant (Async & DB Audit)

-- ==================================================================
-- RPC 1: Get News by Categories (Batch)
-- ==================================================================
-- –ó–∞–º–µ–Ω—è–µ—Ç N –∑–∞–ø—Ä–æ—Å–æ–≤ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—é) –æ–¥–Ω–∏–º —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
-- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: routes/news_routes.py:339 (—Ü–∏–∫–ª –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º)

CREATE OR REPLACE FUNCTION get_news_by_categories_batch(
  cats TEXT[],
  limit_per_category INT DEFAULT 100
)
RETURNS TABLE(
  category TEXT,
  id UUID,
  uid TEXT,
  title TEXT,
  content TEXT,
  link TEXT,
  published_at TIMESTAMPTZ,
  source TEXT,
  importance NUMERIC,
  credibility NUMERIC
) AS $$
  SELECT 
    category,
    id,
    uid,
    title,
    content,
    link,
    published_at,
    source,
    importance,
    credibility
  FROM (
    SELECT *,
      ROW_NUMBER() OVER (
        PARTITION BY category 
        ORDER BY importance DESC, published_at DESC
      ) as rn
    FROM news
    WHERE category = ANY(cats)
      AND category IS NOT NULL
  ) ranked
  WHERE rn <= limit_per_category
  ORDER BY category, importance DESC, published_at DESC;
$$ LANGUAGE SQL STABLE;

COMMENT ON FUNCTION get_news_by_categories_batch IS 
'Batch –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º. –ó–∞–º–µ–Ω—è–µ—Ç N –∑–∞–ø—Ä–æ—Å–æ–≤ –æ–¥–Ω–∏–º. 
–ü—Ä–∏–º–µ—Ä: SELECT * FROM get_news_by_categories_batch(ARRAY[''tech'', ''crypto''], 50)';


-- ==================================================================
-- RPC 2: Get All Category Stats
-- ==================================================================
-- –ó–∞–º–µ–Ω—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ç—ã—Å—è—á –∑–∞–ø–∏—Å–µ–π –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤ Python
-- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: routes/news_routes.py:462 (—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º)

CREATE OR REPLACE FUNCTION get_all_category_stats()
RETURNS TABLE(
  category TEXT,
  count BIGINT,
  avg_importance NUMERIC,
  avg_credibility NUMERIC,
  latest_news_at TIMESTAMPTZ
) AS $$
  SELECT 
    category,
    COUNT(*) as count,
    ROUND(AVG(importance)::NUMERIC, 3) as avg_importance,
    ROUND(AVG(credibility)::NUMERIC, 3) as avg_credibility,
    MAX(published_at) as latest_news_at
  FROM news
  WHERE category IS NOT NULL
  GROUP BY category
  ORDER BY count DESC;
$$ LANGUAGE SQL STABLE;

COMMENT ON FUNCTION get_all_category_stats IS 
'–ê–≥—Ä–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ –∑–∞–≥—Ä—É–∑–∫–∏ 10K+ –∑–∞–ø–∏—Å–µ–π.
–ü—Ä–∏–º–µ—Ä: SELECT * FROM get_all_category_stats()';


-- ==================================================================
-- RPC 3: Count Sources in Period
-- ==================================================================
-- –ó–∞–º–µ–Ω—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É 1000 –∑–∞–ø–∏—Å–µ–π –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
-- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: routes/dashboard_api.py:80 (–ø–æ–¥—Å—á–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤)

CREATE OR REPLACE FUNCTION count_sources_in_period(
  start_date TIMESTAMPTZ DEFAULT NULL,
  end_date TIMESTAMPTZ DEFAULT NULL
)
RETURNS BIGINT AS $$
  SELECT COUNT(DISTINCT source)
  FROM news
  WHERE source IS NOT NULL
    AND (start_date IS NULL OR published_at >= start_date)
    AND (end_date IS NULL OR published_at < end_date);
$$ LANGUAGE SQL STABLE;

COMMENT ON FUNCTION count_sources_in_period IS 
'–ü–æ–¥—Å—á–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∑–∞ –ø–µ—Ä–∏–æ–¥. SQL COUNT(DISTINCT) –≤–º–µ—Å—Ç–æ Python.
–ü—Ä–∏–º–µ—Ä: SELECT count_sources_in_period(NOW() - INTERVAL ''7 days'', NOW())';


-- ==================================================================
-- RPC 4: Count Unique Categories
-- ==================================================================
-- –ó–∞–º–µ–Ω—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ–π —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
-- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: routes/dashboard_api.py:131

CREATE OR REPLACE FUNCTION count_unique_categories()
RETURNS BIGINT AS $$
  SELECT COUNT(DISTINCT category)
  FROM news
  WHERE category IS NOT NULL;
$$ LANGUAGE SQL STABLE;

COMMENT ON FUNCTION count_unique_categories IS 
'–ü–æ–¥—Å—á–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π. –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–µ–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π.
–ü—Ä–∏–º–µ—Ä: SELECT count_unique_categories()';


-- ==================================================================
-- RPC 5: Get Provider Stats (Events)
-- ==================================================================
-- –ó–∞–º–µ–Ω—è–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö —Å–æ–±—ã—Ç–∏–π –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –≤ Python
-- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: routes/admin_routes.py:1194

CREATE OR REPLACE FUNCTION get_provider_stats()
RETURNS TABLE(
  source TEXT,
  event_count BIGINT,
  categories TEXT[],
  avg_importance NUMERIC,
  latest_event_at TIMESTAMPTZ
) AS $$
  SELECT 
    source,
    COUNT(*) as event_count,
    array_agg(DISTINCT category) as categories,
    ROUND(AVG(importance)::NUMERIC, 3) as avg_importance,
    MAX(starts_at) as latest_event_at
  FROM events_new
  WHERE source IS NOT NULL
  GROUP BY source
  ORDER BY event_count DESC;
$$ LANGUAGE SQL STABLE;

COMMENT ON FUNCTION get_provider_stats IS 
'–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤ —Å–æ–±—ã—Ç–∏–π —Å GROUP BY –≤ SQL.
–ü—Ä–∏–º–µ—Ä: SELECT * FROM get_provider_stats()';


-- ==================================================================
-- RPC 6: Get News Stats by Period
-- ==================================================================
-- –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞ –ø–µ—Ä–∏–æ–¥
-- –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: dashboard analytics

CREATE OR REPLACE FUNCTION get_news_stats_period(
  start_date TIMESTAMPTZ,
  end_date TIMESTAMPTZ
)
RETURNS TABLE(
  total_count BIGINT,
  categories_count BIGINT,
  sources_count BIGINT,
  avg_importance NUMERIC,
  avg_credibility NUMERIC
) AS $$
  SELECT
    COUNT(*) as total_count,
    COUNT(DISTINCT category) as categories_count,
    COUNT(DISTINCT source) as sources_count,
    ROUND(AVG(importance)::NUMERIC, 3) as avg_importance,
    ROUND(AVG(credibility)::NUMERIC, 3) as avg_credibility
  FROM news
  WHERE published_at >= start_date 
    AND published_at < end_date;
$$ LANGUAGE SQL STABLE;

COMMENT ON FUNCTION get_news_stats_period IS 
'–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –∑–∞ –ø–µ—Ä–∏–æ–¥. –û–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º –≤–º–µ—Å—Ç–æ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö.
–ü—Ä–∏–º–µ—Ä: SELECT * FROM get_news_stats_period(NOW() - INTERVAL ''1 day'', NOW())';


-- ==================================================================
-- –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π
-- ==================================================================

DO $$
BEGIN
  RAISE NOTICE '‚úÖ RPC —Ñ—É–Ω–∫—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã:';
  RAISE NOTICE '  - get_news_by_categories_batch()';
  RAISE NOTICE '  - get_all_category_stats()';
  RAISE NOTICE '  - count_sources_in_period()';
  RAISE NOTICE '  - count_unique_categories()';
  RAISE NOTICE '  - get_provider_stats()';
  RAISE NOTICE '  - get_news_stats_period()';
  RAISE NOTICE '';
  RAISE NOTICE 'üìä –û–∂–∏–¥–∞–µ–º—ã–π —ç—Ñ—Ñ–µ–∫—Ç:';
  RAISE NOTICE '  - ‚Üì 80-90%% –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ DB queries';
  RAISE NOTICE '  - ‚Üì 90-95%% –æ–±—ä–µ–º –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö';
  RAISE NOTICE '  - ‚Üë 5-10x —Å–∫–æ—Ä–æ—Å—Ç—å endpoints';
  RAISE NOTICE '';
  RAISE NOTICE 'üîó –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥: –ø—Ä–∏–º–µ–Ω–∏—Ç—å –≤ routes/news_routes.py';
END $$;

