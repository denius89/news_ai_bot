# telegram_bot/keyboards.py
from aiogram import types
from services.categories import get_categories, get_subcategories, get_emoji_icon


def start_inline_keyboard() -> types.InlineKeyboardMarkup:
    """–°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é (–ø–µ—Ä–≤–∞—è –∫–Ω–æ–ø–∫–∞ –°—Ç–∞—Ä—Ç)"""
    return types.InlineKeyboardMarkup(
        inline_keyboard=[[types.InlineKeyboardButton(text="üöÄ –°—Ç–∞—Ä—Ç", callback_data="start")]]
    )


def main_inline_keyboard() -> types.InlineKeyboardMarkup:
    return types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="üì∞ –ù–æ–≤–æ—Å—Ç–∏", callback_data="digest_menu")],
            [types.InlineKeyboardButton(text="ü§ñ AI-–¥–∞–π–¥–∂–µ—Å—Ç", callback_data="digest_ai")],
            [types.InlineKeyboardButton(text="üìÖ –°–æ–±—ã—Ç–∏—è", callback_data="events")],
            [types.InlineKeyboardButton(text="üåê WebApp", callback_data="dashboard")],
        ]
    )


def settings_inline_keyboard() -> types.InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)"""
    return types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="üìã –ü–æ–¥–ø–∏—Å–∫–∏", callback_data="subscriptions")],
            [types.InlineKeyboardButton(text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="notifications")],
            [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
        ]
    )


def back_inline_keyboard() -> types.InlineKeyboardMarkup:
    """–ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    return types.InlineKeyboardMarkup(
        inline_keyboard=[[types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]]
    )


def subscriptions_inline_keyboard() -> types.InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏"""
    return types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="üìã –ú–æ–∏ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="my_subs")],
            [types.InlineKeyboardButton(text="‚ûï –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è", callback_data="subscribe_menu")],
            [types.InlineKeyboardButton(text="‚ûñ –û—Ç–ø–∏—Å–∞—Ç—å—Å—è", callback_data="unsubscribe_menu")],
            [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
        ]
    )


def notifications_inline_keyboard() -> types.InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏"""
    return types.InlineKeyboardMarkup(
        inline_keyboard=[
            [types.InlineKeyboardButton(text="üîî –ú–æ–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", callback_data="my_notifications")],
            [types.InlineKeyboardButton(text="‚úÖ –í–∫–ª—é—á–∏—Ç—å –¥–∞–π–¥–∂–µ—Å—Ç", callback_data="notify_on_digest")],
            [types.InlineKeyboardButton(text="‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –¥–∞–π–¥–∂–µ—Å—Ç", callback_data="notify_off_digest")],
            [types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")],
        ]
    )


def categories_inline_keyboard(action: str = "subscribe") -> types.InlineKeyboardMarkup:
    """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫"""
    categories = get_categories()

    buttons = []
    for category in categories:
        emoji = get_emoji_icon(category, "")  # –ë–∞–∑–æ–≤—ã–π emoji –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        buttons.append([types.InlineKeyboardButton(
            text=f"{emoji} {category.title()}", callback_data=f"{action}:{category}")])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    buttons.append([types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])

    return types.InlineKeyboardMarkup(inline_keyboard=buttons)


def subcategories_inline_keyboard(category: str,
                                  action: str = "subscribe") -> types.InlineKeyboardMarkup:
    """–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    subcategories = get_subcategories(category)

    buttons = []
    for subcategory in subcategories:
        emoji = get_emoji_icon(category, subcategory)
        buttons.append(
            [
                types.InlineKeyboardButton(
                    text=f"{emoji} {subcategory.title()}",
                    callback_data=f"{action}:{category}:{subcategory}",
                )
            ]
        )

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    buttons.append([types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])

    return types.InlineKeyboardMarkup(inline_keyboard=buttons)


def digest_categories_inline_keyboard() -> types.InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –¥–∞–π–¥–∂–µ—Å—Ç–∞"""
    categories = get_categories()

    buttons = []
    # –ö–Ω–æ–ø–∫–∞ "–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"
    buttons.append([types.InlineKeyboardButton(text="üì∞ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="digest:all")])

    # –ö–Ω–æ–ø–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
    for category in categories:
        emoji = get_emoji_icon(category, "")
        buttons.append([types.InlineKeyboardButton(
            text=f"{emoji} {category.title()}", callback_data=f"digest:{category}")])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    buttons.append([types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")])

    return types.InlineKeyboardMarkup(inline_keyboard=buttons)
