import asyncio
import logging

from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties

from config.settings import TELEGRAM_BOT_TOKEN
from telegram_bot.handlers import routers
from utils.logging_setup import setup_logging
from database.service import get_async_service

# --- –õ–û–ì–ò–†–û–í–ê–ù–ò–ï ---
setup_logging()
logger = logging.getLogger("telegram_bot")

if not TELEGRAM_BOT_TOKEN:
    raise RuntimeError("‚ùå TELEGRAM_BOT_TOKEN is not set in environment")


async def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    async_service = get_async_service()
    await async_service._init_async_client()
    if not async_service.async_client:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        return

    bot = Bot(
        token=TELEGRAM_BOT_TOKEN,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML),
    )
    dp = Dispatcher()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —Ä–æ—É—Ç–µ—Ä—ã
    for router in routers:
        dp.include_router(router)

    logger.info("üöÄ Telegram bot started")
    try:
        await dp.start_polling(bot)
    except Exception:
        logger.exception("‚ùå –û—à–∏–±–∫–∞ –≤ Telegram-–±–æ—Ç–µ")
    finally:
        await bot.session.close()


if __name__ == "__main__":
    asyncio.run(main())
