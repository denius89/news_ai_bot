#!/bin/bash

# –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ PulseAI —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 2.1

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—â–µ–Ω –ª–∏ –ø—Ä–æ—Ü–µ—Å—Å
check_process() {
    local process_pattern="$1"
    local process_name="$2"
    
    if pgrep -f "$process_pattern" > /dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è $process_name —É–∂–µ –∑–∞–ø—É—â–µ–Ω!${NC}"
        echo -e "${BLUE}üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:${NC}"
        pgrep -f "$process_pattern" | while read pid; do
            echo "   PID: $pid - $(ps -p $pid -o command= 2>/dev/null || echo '–ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω')"
        done
        return 0
    else
        echo -e "${GREEN}‚úÖ $process_name –Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–∞
check_port() {
    local port="$1"
    local service_name="$2"
    
    if lsof -i ":$port" > /dev/null 2>&1; then
        local pid=$(lsof -i ":$port" | tail -n +2 | awk '{print $2}' | head -1)
        echo -e "${YELLOW}‚ö†Ô∏è –ü–æ—Ä—Ç $port ($service_name) –∑–∞–Ω—è—Ç PID: $pid${NC}"
        return 0
    else
        echo -e "${GREEN}‚úÖ –ü–æ—Ä—Ç $port ($service_name) —Å–≤–æ–±–æ–¥–µ–Ω${NC}"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
safe_stop_process() {
    local process_pattern="$1"
    local process_name="$2"
    local max_wait=10
    
    echo -e "${BLUE}üîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ $process_name...${NC}"
    
    # –ú—è–≥–∫–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
    pkill -f "$process_pattern" 2>/dev/null || true
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    local count=0
    while pgrep -f "$process_pattern" > /dev/null && [ $count -lt $max_wait ]; do
        sleep 1
        count=$((count + 1))
        echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è $process_name... ($count/$max_wait)${NC}"
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    if pgrep -f "$process_pattern" > /dev/null; then
        echo -e "${RED}‚ö†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ $process_name...${NC}"
        pkill -9 -f "$process_pattern" 2>/dev/null || true
        sleep 2
    fi
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    if pgrep -f "$process_pattern" > /dev/null; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $process_name${NC}"
        return 1
    else
        echo -e "${GREEN}‚úÖ $process_name –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        return 0
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
start_process_safe() {
    local process_pattern="$1"
    local process_name="$2"
    local start_command="$3"
    local check_url="$4"
    local pid_file="$5"
    local port="$6"
    
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ $process_name...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    local process_running=false
    if check_process "$process_pattern" "$process_name"; then
        process_running=true
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—Ç
    local port_occupied=false
    if [ -n "$port" ] && check_port "$port" "$process_name"; then
        port_occupied=true
    fi
    
    # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –∏–ª–∏ –ø–æ—Ä—Ç –∑–∞–Ω—è—Ç—ã
    if [ "$process_running" = true ] || [ "$port_occupied" = true ]; then
        echo -e "${YELLOW}‚ùì –ß—Ç–æ –¥–µ–ª–∞—Ç—å —Å —É–∂–µ –∑–∞–ø—É—â–µ–Ω–Ω—ã–º $process_name?${NC}"
        echo "1) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"
        echo "2) –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å –∑–∞–ø—É—Å–∫"
        echo "3) –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å"
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é (1-3): " choice
        
        case $choice in
            1)
                safe_stop_process "$process_pattern" "$process_name"
                ;;
            2)
                echo -e "${YELLOW}‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—É—Å–∫ $process_name${NC}"
                return 0
                ;;
            3)
                echo -e "${RED}üíÄ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ $process_name...${NC}"
                pkill -9 -f "$process_pattern" 2>/dev/null || true
                sleep 2
                ;;
            *)
                echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—É—Å–∫ $process_name${NC}"
                return 0
                ;;
        esac
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
    echo -e "${BLUE}‚ñ∂Ô∏è –í—ã–ø–æ–ª–Ω—è–µ–º: $start_command${NC}"
    eval "$start_command" &
    local pid=$!
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º PID
    echo $pid > "$pid_file"
    echo -e "${GREEN}üìù PID —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ $pid_file: $pid${NC}"
    
    # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
    sleep 3
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    if ! ps -p $pid > /dev/null; then
        echo -e "${RED}‚ùå $process_name –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è (PID $pid –Ω–µ –Ω–∞–π–¥–µ–Ω)${NC}"
        rm -f "$pid_file"
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å (–µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω URL)
    if [ -n "$check_url" ]; then
        echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ $process_name...${NC}"
        local count=0
        local max_checks=10
        
        while [ $count -lt $max_checks ]; do
            if curl -s "$check_url" > /dev/null 2>&1; then
                echo -e "${GREEN}‚úÖ $process_name –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É $check_url${NC}"
                return 0
            fi
            sleep 2
            count=$((count + 1))
            echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ $process_name... ($count/$max_checks)${NC}"
        done
        
        echo -e "${RED}‚ùå $process_name –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ $check_url${NC}"
        return 1
    fi
    
    echo -e "${GREEN}‚úÖ $process_name –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ (PID: $pid)${NC}"
    return 0
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    echo -e "${BLUE}üöÄ –ó–∞–ø—É—Å–∫ PulseAI —Å–µ—Ä–≤–∏—Å–æ–≤ —Å –∫–æ–Ω—Ç—Ä–æ–ª–µ–º –¥—É–±–ª–∏–∫–∞—Ç–æ–≤...${NC}"
    echo "=================================================="
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º PYTHONPATH
    export PYTHONPATH="/Users/denisfedko/news_ai_bot:$PYTHONPATH"
    echo -e "${GREEN}‚úÖ PYTHONPATH —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    if ! command -v python3 > /dev/null; then
        echo -e "${RED}‚ùå Python3 –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
    
    if ! command -v curl > /dev/null; then
        echo -e "${RED}‚ùå curl –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã${NC}"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask WebApp
    start_process_safe \
        "python3 src/webapp.py" \
        "Flask WebApp" \
        "PYTHONPATH=\"/Users/denisfedko/news_ai_bot:\$PYTHONPATH\" python3 src/webapp.py" \
        "http://localhost:8001/webapp" \
        ".flask.pid" \
        "8001"
    
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Flask WebApp${NC}"
        exit 1
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Telegram Bot
    start_process_safe \
        "python3 telegram_bot/bot.py\|python3 -m telegram_bot.bot" \
        "Telegram Bot" \
        "./run_bot.sh" \
        "" \
        ".bot.pid" \
        ""
    
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Telegram Bot${NC}"
        exit 1
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º URL –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
    echo -e "${BLUE}üåê –ü–æ–ª—É—á–µ–Ω–∏–µ Cloudflare URL...${NC}"
    WEBAPP_URL=$(python3 -c "
import sys
sys.path.append('/Users/denisfedko/news_ai_bot')
from config.cloudflare import get_webapp_url
print(get_webapp_url())
" 2>/dev/null || echo "https://immunology-restructuring-march-same.trycloudflare.com")
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    echo ""
    echo -e "${GREEN}üéâ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo "=================================================="
    echo -e "${BLUE}üì± WebApp:${NC} $WEBAPP_URL/webapp"
    echo -e "${BLUE}üîó API:${NC} http://localhost:8001/api"
    echo -e "${BLUE}ü§ñ Telegram Bot:${NC} @PulseAIDigest_bot"
    echo ""
    echo -e "${YELLOW}üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: ./stop_services.sh${NC}"
    echo -e "${YELLOW}üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: ./check_processes_safe.sh${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    echo ""
    echo -e "${BLUE}üìä –¢–µ–∫—É—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã PulseAI:${NC}"
    echo "=================================================="
    
    if pgrep -f "python3 src/webapp.py" > /dev/null; then
        echo -e "${GREEN}‚úÖ Flask WebApp:${NC}"
        pgrep -f "python3 src/webapp.py" | while read pid; do
            echo "   PID: $pid - $(ps -p $pid -o command= 2>/dev/null || echo '–ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω')"
        done
    fi
    
    if pgrep -f "telegram_bot" > /dev/null; then
        echo -e "${GREEN}‚úÖ Telegram Bot:${NC}"
        pgrep -f "telegram_bot" | while read pid; do
            echo "   PID: $pid - $(ps -p $pid -o command= 2>/dev/null || echo '–ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω')"
        done
    fi
    
    if pgrep -f "cloudflared" > /dev/null; then
        echo -e "${GREEN}‚úÖ Cloudflare Tunnel:${NC}"
        pgrep -f "cloudflared" | while read pid; do
            echo "   PID: $pid - $(ps -p $pid -o command= 2>/dev/null || echo '–ü—Ä–æ—Ü–µ—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω')"
        done
    fi
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"