version: 1
disable_existing_loggers: False

formatters:
  standard:
    format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"

  detailed:
    format: "%(asctime)s [%(levelname)s] %(name)s:%(lineno)d: %(message)s"

  json:
    format: '{"timestamp": "%(asctime)s", "level": "%(levelname)s", "logger": "%(name)s", "message": "%(message)s"}'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout

  file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/app.log
    encoding: utf-8
    maxBytes: 10485760  # 10 MB
    backupCount: 5

  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/errors.log
    encoding: utf-8
    maxBytes: 5242880   # 5 MB
    backupCount: 3

  performance:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/performance.log
    encoding: utf-8
    maxBytes: 10485760  # 10 MB
    backupCount: 3

root:
  level: DEBUG
  handlers: [console, file, error_file]

loggers:
  # Core application loggers
  telegram_bot:
    level: INFO
    handlers: [console, file]
    propagate: no

  database:
    level: DEBUG
    handlers: [console, file, error_file]
    propagate: no

  digests:
    level: INFO
    handlers: [console, file]
    propagate: no

  parsers:
    level: INFO
    handlers: [console, file, error_file]
    propagate: no

  services:
    level: INFO
    handlers: [console, file]
    propagate: no

  # Performance monitoring
  performance:
    level: INFO
    handlers: [performance]
    propagate: no

  # Third-party libraries
  httpx:
    level: WARNING
    handlers: [file]
    propagate: no

  aiohttp:
    level: WARNING
    handlers: [file]
    propagate: no

  urllib3:
    level: WARNING
    handlers: [file]
    propagate: no

  fake_useragent:
    level: ERROR
    handlers: [file]
    propagate: no
