/* ============================================================================
   PulseAI Animation System
   Анимации для Reactor, уведомлений, переходов и эффектов
   ============================================================================ */

/* === Reactor Animations === */

/* Pulse animation for Reactor status */
@keyframes pulse-soft {
  0%, 100% {
    opacity: 1;
    transform: scale(1);
  }
  50% {
    opacity: 0.8;
    transform: scale(var(--pulse-scale, 1.05));
  }
}

.pulse-soft {
  animation: pulse-soft var(--pulse-duration, 2s) ease-in-out infinite;
}

/* Flash animation for alerts */
@keyframes flash {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.3;
  }
}

.flash {
  animation: flash var(--flash-duration, 0.3s) ease-in-out;
}

/* Slide animations */
@keyframes slideIn {
  from {
    transform: translateX(var(--slide-distance, 100%));
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes slideOut {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(var(--slide-distance, 100%));
    opacity: 0;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.slide-in {
  animation: slideIn var(--slide-duration, 0.3s) ease-out;
}

.slide-out {
  animation: slideOut var(--slide-duration, 0.3s) ease-in;
}

.slide-up {
  animation: slideUp var(--slide-duration, 0.3s) ease-out;
}

.slide-down {
  animation: slideDown var(--slide-duration, 0.3s) ease-out;
}

/* Fade animations */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

.fade-in {
  animation: fadeIn var(--duration-300) ease-out;
}

.fade-out {
  animation: fadeOut var(--duration-300) ease-in;
}

/* Scale animations */
@keyframes scaleIn {
  from {
    transform: scale(0.9);
    opacity: 0;
  }
  to {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes scaleOut {
  from {
    transform: scale(1);
    opacity: 1;
  }
  to {
    transform: scale(0.9);
    opacity: 0;
  }
}

.scale-in {
  animation: scaleIn var(--duration-200) ease-out;
}

.scale-out {
  animation: scaleOut var(--duration-200) ease-in;
}

/* Bounce animation */
@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translateY(0);
  }
  40%, 43% {
    transform: translateY(-8px);
  }
  70% {
    transform: translateY(-4px);
  }
  90% {
    transform: translateY(-2px);
  }
}

.bounce {
  animation: bounce 1s ease-in-out infinite;
}

/* Shake animation for errors */
@keyframes shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-4px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(4px);
  }
}

.shake {
  animation: shake 0.5s ease-in-out;
}

/* Rotate animations */
@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.rotate {
  animation: rotate 1s linear infinite;
}

.rotate-slow {
  animation: rotate 3s linear infinite;
}

/* === Loading Animations === */

/* Spinner */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.spinner {
  display: inline-block;
  width: 1rem;
  height: 1rem;
  border: 2px solid var(--color-border);
  border-top-color: var(--color-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.spinner-sm {
  width: 0.75rem;
  height: 0.75rem;
  border-width: 1px;
}

.spinner-lg {
  width: 1.5rem;
  height: 1.5rem;
  border-width: 3px;
}

/* Dots loading */
@keyframes dots {
  0%, 20% {
    color: transparent;
    text-shadow: 0.25em 0 0 transparent, 0.5em 0 0 transparent;
  }
  40% {
    color: var(--color-text);
    text-shadow: 0.25em 0 0 transparent, 0.5em 0 0 transparent;
  }
  60% {
    text-shadow: 0.25em 0 0 var(--color-text), 0.5em 0 0 transparent;
  }
  80%, 100% {
    text-shadow: 0.25em 0 0 var(--color-text), 0.5em 0 0 var(--color-text);
  }
}

.loading-dots::after {
  content: '...';
  animation: dots 1.5s infinite;
}

/* Progress bar */
@keyframes progress {
  from {
    width: 0%;
  }
  to {
    width: 100%;
  }
}

.progress-bar {
  width: 100%;
  height: 0.25rem;
  background: var(--color-bg-secondary);
  border-radius: var(--radius-full);
  overflow: hidden;
}

.progress-bar-fill {
  height: 100%;
  background: var(--color-primary);
  border-radius: var(--radius-full);
  transition: width var(--duration-300) ease-out;
}

.progress-bar-animated .progress-bar-fill {
  animation: progress 2s ease-in-out infinite;
}

/* === Toast Animations === */

@keyframes toastSlideIn {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

@keyframes toastSlideOut {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(100%);
    opacity: 0;
  }
}

.toast-enter {
  animation: toastSlideIn var(--duration-300) ease-out;
}

.toast-exit {
  animation: toastSlideOut var(--duration-300) ease-in;
}

/* === Modal Animations === */

@keyframes modalFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes modalSlideIn {
  from {
    transform: translateY(-50px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.modal-backdrop-enter {
  animation: modalFadeIn var(--duration-200) ease-out;
}

.modal-content-enter {
  animation: modalSlideIn var(--duration-300) ease-out;
}

/* === Hover Effects === */

.hover-lift {
  transition: var(--transition-transform);
}

.hover-lift:hover {
  transform: translateY(-2px);
}

.hover-scale {
  transition: var(--transition-transform);
}

.hover-scale:hover {
  transform: scale(1.02);
}

.hover-glow {
  transition: var(--transition-all);
}

.hover-glow:hover {
  box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
}

/* === Focus Effects === */

.focus-ring {
  transition: var(--transition-all);
}

.focus-ring:focus {
  outline: none;
  box-shadow: 0 0 0 3px var(--color-primary-100);
}

/* === Reactor Specific === */

/* Connection status pulse */
.reactor-connected {
  animation: pulse-soft 2s ease-in-out infinite;
}

.reactor-disconnected {
  animation: flash 0.5s ease-in-out;
}

/* Event notification slide */
.event-notification {
  animation: slideIn 0.3s ease-out;
}

/* Metrics update flash */
.metrics-updated {
  animation: flash 0.2s ease-in-out;
}

/* === Reduced Motion Support === */
@media (prefers-reduced-motion: reduce) {
  .pulse-soft,
  .flash,
  .slide-in,
  .slide-out,
  .slide-up,
  .slide-down,
  .fade-in,
  .fade-out,
  .scale-in,
  .scale-out,
  .bounce,
  .shake,
  .rotate,
  .rotate-slow,
  .spinner,
  .loading-dots::after,
  .progress-bar-animated .progress-bar-fill,
  .toast-enter,
  .toast-exit,
  .modal-backdrop-enter,
  .modal-content-enter,
  .reactor-connected,
  .reactor-disconnected,
  .event-notification,
  .metrics-updated {
    animation: none;
  }
  
  .hover-lift:hover,
  .hover-scale:hover {
    transform: none;
  }
}
