#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è, —É–¥–∞–ª–µ–Ω–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤.
"""

import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from database.db_models import (
    supabase,
    archive_digest,
    unarchive_digest,
    soft_delete_digest,
    restore_digest,
    get_user_digests,
)


def show_digest_state(digest_id: str, label: str = ""):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–π–¥–∂–µ—Å—Ç–∞."""
    if label:
        print(f"\n{label}")

    result = supabase.table("digests").select("id, archived, deleted_at").eq("id", digest_id).execute()
    if result.data:
        d = result.data[0]
        print(f"   ID: {d['id'][:8]}...")
        print(f"   archived: {d['archived']}")
        print(f"   deleted_at: {d['deleted_at']}")
    else:
        print(f"   ‚ùå –î–∞–π–¥–∂–µ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω")


def demo_operations():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π."""
    print("=" * 80)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–ê–ë–û–¢–´ –ê–†–•–ò–í–ò–†–û–í–ê–ù–ò–Ø –ò –£–î–ê–õ–ï–ù–ò–Ø")
    print("=" * 80)

    if not supabase:
        print("‚ùå Supabase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        return

    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç –¥–ª—è –¥–µ–º–æ
    result = supabase.table("digests").select("*").is_("deleted_at", "null").eq("archived", False).limit(1).execute()

    if not result.data:
        print("\n‚ö†Ô∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏")
        return

    digest = result.data[0]
    digest_id = digest["id"]
    user_id = digest["user_id"]

    print(f"\nüìù –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–π–¥–∂–µ—Å—Ç: {digest_id[:8]}...")
    print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id[:8]}...")

    # ============================================================================
    # –ß–ê–°–¢–¨ 1: –ê–†–•–ò–í–ò–†–û–í–ê–ù–ò–ï
    # ============================================================================
    print("\n" + "=" * 80)
    print("–ß–ê–°–¢–¨ 1: –ê–†–•–ò–í–ò–†–û–í–ê–ù–ò–ï")
    print("=" * 80)

    show_digest_state(digest_id, "üîπ –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ:")

    print("\nüì¶ –í—ã–ø–æ–ª–Ω—è–µ–º: archive_digest(digest_id, user_id)")
    print("   SQL UPDATE:")
    print("   UPDATE digests")
    print("   SET archived = TRUE")
    print("   WHERE id = digest_id")
    print("     AND user_id = user_id")
    print("     AND archived = FALSE")
    print("     AND deleted_at IS NULL")

    success = archive_digest(digest_id, user_id)
    print(f"\n   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ SUCCESS' if success else '‚ùå FAILED'}")

    show_digest_state(digest_id, "üîπ –ü–æ—Å–ª–µ –∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è:")

    # ============================================================================
    # –ß–ê–°–¢–¨ 2: –†–ê–ó–ê–†–•–ò–í–ò–†–û–í–ê–ù–ò–ï
    # ============================================================================
    print("\n" + "=" * 80)
    print("–ß–ê–°–¢–¨ 2: –†–ê–ó–ê–†–•–ò–í–ò–†–û–í–ê–ù–ò–ï")
    print("=" * 80)

    print("\nüìÇ –í—ã–ø–æ–ª–Ω—è–µ–º: unarchive_digest(digest_id, user_id)")
    print("   SQL UPDATE:")
    print("   UPDATE digests")
    print("   SET archived = FALSE, deleted_at = NULL")
    print("   WHERE id = digest_id")
    print("     AND user_id = user_id")
    print("     AND archived = TRUE")

    success = unarchive_digest(digest_id, user_id)
    print(f"\n   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ SUCCESS' if success else '‚ùå FAILED'}")

    show_digest_state(digest_id, "üîπ –ü–æ—Å–ª–µ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏—è:")

    # ============================================================================
    # –ß–ê–°–¢–¨ 3: –ú–Ø–ì–ö–û–ï –£–î–ê–õ–ï–ù–ò–ï
    # ============================================================================
    print("\n" + "=" * 80)
    print("–ß–ê–°–¢–¨ 3: –ú–Ø–ì–ö–û–ï –£–î–ê–õ–ï–ù–ò–ï")
    print("=" * 80)

    print("\nüóëÔ∏è  –í—ã–ø–æ–ª–Ω—è–µ–º: soft_delete_digest(digest_id, user_id)")
    print("   SQL UPDATE:")
    print("   UPDATE digests")
    print("   SET deleted_at = NOW()")
    print("   WHERE id = digest_id")
    print("     AND user_id = user_id")
    print("     AND deleted_at IS NULL")

    success = soft_delete_digest(digest_id, user_id)
    print(f"\n   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ SUCCESS' if success else '‚ùå FAILED'}")

    show_digest_state(digest_id, "üîπ –ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:")

    # ============================================================================
    # –ß–ê–°–¢–¨ 4: –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï
    # ============================================================================
    print("\n" + "=" * 80)
    print("–ß–ê–°–¢–¨ 4: –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï")
    print("=" * 80)

    print("\n‚ôªÔ∏è  –í—ã–ø–æ–ª–Ω—è–µ–º: restore_digest(digest_id, user_id)")
    print("   SQL UPDATE:")
    print("   UPDATE digests")
    print("   SET deleted_at = NULL, archived = FALSE")
    print("   WHERE id = digest_id")
    print("     AND user_id = user_id")
    print("     AND deleted_at IS NOT NULL")

    success = restore_digest(digest_id, user_id)
    print(f"\n   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ SUCCESS' if success else '‚ùå FAILED'}")

    show_digest_state(digest_id, "üîπ –ü–æ—Å–ª–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:")


def demo_filters():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤."""
    print("\n" + "=" * 80)
    print("–ß–ê–°–¢–¨ 5: –†–ê–ë–û–¢–ê –§–ò–õ–¨–¢–†–û–í")
    print("=" * 80)

    if not supabase:
        return

    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥–∞–π–¥–∂–µ—Å—Ç–∞–º–∏
    result = supabase.table("digests").select("user_id").limit(1).execute()
    if not result.data:
        print("\n‚ö†Ô∏è –ù–µ—Ç –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤")
        return

    user_id = result.data[0]["user_id"]

    print(f"\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_id[:8]}...")

    # ============================================================================
    # –§–ò–õ–¨–¢–† 1: –ê–ö–¢–ò–í–ù–´–ï
    # ============================================================================
    print("\n" + "-" * 80)
    print("–§–ò–õ–¨–¢–† 1: –ê–ö–¢–ò–í–ù–´–ï (include_deleted=False, include_archived=False)")
    print("-" * 80)

    print("\nüìã SQL Query:")
    print("   SELECT * FROM digests")
    print("   WHERE user_id = user_id")
    print("     AND deleted_at IS NULL")
    print("     AND (archived IS NULL OR archived = FALSE)")
    print("   ORDER BY created_at DESC")

    active = get_user_digests(user_id, limit=10, include_deleted=False, include_archived=False)

    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(active)} –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤")
    for d in active[:3]:
        print(f"   - {d['id'][:8]}... archived={d.get('archived')}, deleted_at={d.get('deleted_at')}")

    # ============================================================================
    # –§–ò–õ–¨–¢–† 2: –ê–†–•–ò–í–ò–†–û–í–ê–ù–ù–´–ï
    # ============================================================================
    print("\n" + "-" * 80)
    print("–§–ò–õ–¨–¢–† 2: –ê–†–•–ò–í–ò–†–û–í–ê–ù–ù–´–ï (include_deleted=False, include_archived=True)")
    print("-" * 80)

    print("\nüì¶ SQL Query:")
    print("   SELECT * FROM digests")
    print("   WHERE user_id = user_id")
    print("     AND deleted_at IS NULL")
    print("     AND archived = TRUE")
    print("   ORDER BY created_at DESC")

    archived = get_user_digests(user_id, limit=10, include_deleted=False, include_archived=True)

    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(archived)} –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤")
    for d in archived[:3]:
        print(f"   - {d['id'][:8]}... archived={d.get('archived')}, deleted_at={d.get('deleted_at')}")

    # ============================================================================
    # –§–ò–õ–¨–¢–† 3: –£–î–ê–õ–ï–ù–ù–´–ï
    # ============================================================================
    print("\n" + "-" * 80)
    print("–§–ò–õ–¨–¢–† 3: –£–î–ê–õ–ï–ù–ù–´–ï (include_deleted=True, include_archived=False)")
    print("-" * 80)

    print("\nüóëÔ∏è  SQL Query:")
    print("   SELECT * FROM digests")
    print("   WHERE user_id = user_id")
    print("     AND deleted_at IS NOT NULL")
    print("     AND (archived IS NULL OR archived = FALSE)")
    print("   ORDER BY created_at DESC")

    deleted = get_user_digests(user_id, limit=10, include_deleted=True, include_archived=False)

    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(deleted)} –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤")
    for d in deleted[:3]:
        print(f"   - {d['id'][:8]}... archived={d.get('archived')}, deleted_at={d.get('deleted_at')}")

    # ============================================================================
    # –§–ò–õ–¨–¢–† 4: –í–°–ï
    # ============================================================================
    print("\n" + "-" * 80)
    print("–§–ò–õ–¨–¢–† 4: –í–°–ï (include_deleted=True, include_archived=True)")
    print("-" * 80)

    print("\nüìä SQL Query:")
    print("   SELECT * FROM digests")
    print("   WHERE user_id = user_id")
    print("   ORDER BY created_at DESC")

    all_digests = get_user_digests(user_id, limit=10, include_deleted=True, include_archived=True)

    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(all_digests)} –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤")
    for d in all_digests[:5]:
        print(f"   - {d['id'][:8]}... archived={d.get('archived')}, deleted_at={d.get('deleted_at')}")

    # ============================================================================
    # –ü–†–û–í–ï–†–ö–ê –†–ê–ó–î–ï–õ–ï–ù–ò–Ø
    # ============================================================================
    print("\n" + "=" * 80)
    print("–ü–†–û–í–ï–†–ö–ê: –§–ò–õ–¨–¢–†–´ –ü–†–ê–í–ò–õ–¨–ù–û –†–ê–ó–î–ï–õ–Ø–Æ–¢ –î–ê–ô–î–ñ–ï–°–¢–´?")
    print("=" * 80)

    active_ids = set(d["id"] for d in active)
    archived_ids = set(d["id"] for d in archived)
    deleted_ids = set(d["id"] for d in deleted)

    print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –ê–∫—Ç–∏–≤–Ω—ã–µ: {len(active_ids)}")
    print(f"   –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: {len(archived_ids)}")
    print(f"   –£–¥–∞–ª–µ–Ω–Ω—ã–µ: {len(deleted_ids)}")
    print(f"   –í—Å–µ–≥–æ: {len(all_digests)}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è
    active_archived = active_ids & archived_ids
    active_deleted = active_ids & deleted_ids
    archived_deleted = archived_ids & deleted_ids

    print(f"\nüîç –ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è:")
    print(
        f"   –ê–∫—Ç–∏–≤–Ω—ã–µ ‚à© –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ: {len(active_archived)} {'‚úÖ OK' if len(active_archived) == 0 else '‚ùå –ü–†–û–ë–õ–ï–ú–ê!'}"
    )
    print(f"   –ê–∫—Ç–∏–≤–Ω—ã–µ ‚à© –£–¥–∞–ª–µ–Ω–Ω—ã–µ: {len(active_deleted)} {'‚úÖ OK' if len(active_deleted) == 0 else '‚ùå –ü–†–û–ë–õ–ï–ú–ê!'}")
    print(
        f"   –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ ‚à© –£–¥–∞–ª–µ–Ω–Ω—ã–µ: {len(archived_deleted)} {'‚úÖ OK' if len(archived_deleted) == 0 else '‚ùå –ü–†–û–ë–õ–ï–ú–ê!'}"
    )

    if active_archived or active_deleted or archived_deleted:
        print("\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–ï–†–ï–°–ï–ß–ï–ù–ò–Ø! –§–∏–ª—å—Ç—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û!")
    else:
        print("\n‚úÖ –ü–ï–†–ï–°–ï–ß–ï–ù–ò–ô –ù–ï–¢! –§–∏–ª—å—Ç—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç –ü–†–ê–í–ò–õ–¨–ù–û!")


if __name__ == "__main__":
    demo_operations()
    demo_filters()

    print("\n" + "=" * 80)
    print("–î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 80)
