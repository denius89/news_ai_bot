#!/bin/bash

# üîç –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîç –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞${NC}"
echo "=========================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
check_tools() {
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...${NC}"
    
    if ! python3 -c "import black" 2>/dev/null; then
        echo -e "${RED}‚ùå Black –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install black${NC}"
        exit 1
    fi
    
    if ! python3 -c "import flake8" 2>/dev/null; then
        echo -e "${RED}‚ùå Flake8 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install flake8${NC}"
        exit 1
    fi
    
    if python3 -c "import isort" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ isort –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        HAS_ISORT=true
    else
        echo -e "${YELLOW}‚ö†Ô∏è isort –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)${NC}"
        HAS_ISORT=false
    fi
    
    echo -e "${GREEN}‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ç—Ä–æ–≥–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
strict_code_check() {
    echo -e "${BLUE}üßπ –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞...${NC}"
    
    # 1. Black —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    echo -e "${YELLOW}üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ Black —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...${NC}"
    if ! python3 -m black --check --quiet .; then
        echo -e "${RED}‚ùå Black –Ω–∞—à–µ–ª –ø—Ä–æ–±–ª–µ–º—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è${NC}"
        echo -e "${YELLOW}üí° –ü—Ä–∏–º–µ–Ω–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: python3 -m black .${NC}"
        exit 1
    fi
    echo -e "${GREEN}‚úÖ Black —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
    
    # 2. –°—Ç—Ä–æ–≥–∞—è Flake8 –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è
    echo -e "${YELLOW}üîç –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ Flake8...${NC}"
    if ! python3 -m flake8 --config=.flake8 .; then
        echo -e "${RED}‚ùå Flake8 –Ω–∞—à–µ–ª –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã –≤ –∫–æ–¥–µ${NC}"
        echo -e "${YELLOW}üí° –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –ø–µ—Ä–µ–¥ –∫–æ–º–º–∏—Ç–æ–º:${NC}"
        python3 -m flake8 --config=.flake8 .
        exit 1
    fi
    echo -e "${GREEN}‚úÖ Flake8 —Å—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞${NC}"
    
    # 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ (–µ—Å–ª–∏ isort –¥–æ—Å—Ç—É–ø–µ–Ω)
    if [ "$HAS_ISORT" = true ]; then
        echo -e "${YELLOW}üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–º–ø–æ—Ä—Ç–æ–≤...${NC}"
        if ! python3 -m isort --check-only --quiet .; then
            echo -e "${RED}‚ùå isort –Ω–∞—à–µ–ª –ø—Ä–æ–±–ª–µ–º—ã —Å –∏–º–ø–æ—Ä—Ç–∞–º–∏${NC}"
            echo -e "${YELLOW}üí° –û—Ç—Å–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∏–º–ø–æ—Ä—Ç—ã: python3 -m isort .${NC}"
            exit 1
        fi
        echo -e "${GREEN}‚úÖ –ò–º–ø–æ—Ä—Ç—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è isort –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É –∏–º–ø–æ—Ä—Ç–æ–≤${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_stats() {
    echo -e "${BLUE}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–¥–∞:${NC}"
    
    # –ü–æ–¥—Å—á–µ—Ç —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞
    PYTHON_FILES=$(find . -name "*.py" -not -path "./venv/*" -not -path "./.git/*" -not -path "./node_modules/*" | wc -l)
    TOTAL_LINES=$(find . -name "*.py" -not -path "./venv/*" -not -path "./.git/*" -not -path "./node_modules/*" -exec wc -l {} + | tail -1 | awk '{print $1}')
    
    echo -e "  - Python —Ñ–∞–π–ª–æ–≤: ${PYTHON_FILES}"
    echo -e "  - –í—Å–µ–≥–æ —Å—Ç—Ä–æ–∫ –∫–æ–¥–∞: ${TOTAL_LINES}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω radon)
    if python3 -c "import radon" 2>/dev/null; then
        echo -e "${YELLOW}üìà –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∫–æ–¥–∞...${NC}"
        python3 -m radon cc . --min B 2>/dev/null || echo -e "${YELLOW}‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ—é—Ç –≤—ã—Å–æ–∫—É—é —Å–ª–æ–∂–Ω–æ—Å—Ç—å${NC}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        echo -e "${RED}‚ùå –≠—Ç–æ –Ω–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π${NC}"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    check_tools
    
    # –°—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
    strict_code_check
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    show_stats
    
    echo ""
    echo -e "${GREEN}üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!${NC}"
    echo -e "${BLUE}üí° –ö–æ–¥ –≥–æ—Ç–æ–≤ –∫ –∫–æ–º–º–∏—Ç—É${NC}"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
