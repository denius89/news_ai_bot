#!/usr/bin/env python3
"""
üîß –°–∫—Ä–∏–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤ –ø–æ—Å–ª–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
–ê–≤—Ç–æ—Ä: AI Assistant
–í–µ—Ä—Å–∏—è: 1.0

–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –ø–µ—Ä–µ–º–µ—â–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–∞—Ö tests –∏ utils
"""

import os
import re
from pathlib import Path


class ImportUpdater:
    def __init__(self, project_root="."):
        self.project_root = Path(project_root)

        # –ú–∞–ø–ø–∏–Ω–≥ —Å—Ç–∞—Ä—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–∞ –Ω–æ–≤—ã–µ
        self.import_mappings = {
            # Utils –∏–º–ø–æ—Ä—Ç—ã
            "from utils.clean_text": "from utils.text.clean_text",
            "from utils.formatters": "from utils.text.formatters",
            "from utils.cache": "from utils.system.cache",
            "from utils.dates": "from utils.system.dates",
            "from utils.progress_animation": "from utils.system.progress_animation",
            "from utils.ai_client": "from utils.ai.ai_client",
            "from utils.news_distribution": "from utils.ai.news_distribution",
            "from utils.http_client": "from utils.network.http_client",
            "from utils.telegram_sender": "from utils.network.telegram_sender",
            "from utils.logging_setup": "from utils.logging.logging_setup",
            "from utils.standard_logging": "from utils.logging.standard_logging",
            # Import statements
            "import utils.clean_text": "import utils.text.clean_text",
            "import utils.formatters": "import utils.text.formatters",
            "import utils.cache": "import utils.system.cache",
            "import utils.dates": "import utils.system.dates",
            "import utils.progress_animation": "import utils.system.progress_animation",
            "import utils.ai_client": "import utils.ai.ai_client",
            "import utils.news_distribution": "import utils.ai.news_distribution",
            "import utils.http_client": "import utils.network.http_client",
            "import utils.telegram_sender": "import utils.network.telegram_sender",
            "import utils.logging_setup": "import utils.logging.logging_setup",
            "import utils.standard_logging": "import utils.logging.standard_logging",
        }

    def update_file_imports(self, file_path):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ"""
        try:
            with open(file_path, "r", encoding="utf-8") as f:
                content = f.read()

            original_content = content
            updated_count = 0

            # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –º–∞–ø–ø–∏–Ω–≥–∏
            for old_import, new_import in self.import_mappings.items():
                if old_import in content:
                    content = content.replace(old_import, new_import)
                    updated_count += 1

            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –µ—Å–ª–∏ –±—ã–ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è
            if content != original_content:
                with open(file_path, "w", encoding="utf-8") as f:
                    f.write(content)
                return updated_count

            return 0

        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ {file_path}: {e}")
            return 0

    def update_tests_imports(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –ø–∞–ø–∫–µ tests"""
        print("üîß –û–±–Ω–æ–≤–ª—è—é –∏–º–ø–æ—Ä—Ç—ã –≤ tests...")

        total_files = 0
        total_updates = 0

        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ Python —Ñ–∞–π–ª—ã –≤ tests
        for py_file in self.project_root.glob("tests/**/*.py"):
            if py_file.name != "__init__.py":
                total_files += 1
                updates = self.update_file_imports(py_file)
                if updates > 0:
                    print(f"  ‚úÖ {py_file.relative_to(self.project_root)} - {updates} –∏–º–ø–æ—Ä—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
                    total_updates += updates

        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {total_updates} –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ {total_files} —Ñ–∞–π–ª–∞—Ö tests")
        return total_updates

    def update_utils_imports(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –ø–∞–ø–∫–µ utils"""
        print("üîß –û–±–Ω–æ–≤–ª—è—é –∏–º–ø–æ—Ä—Ç—ã –≤ utils...")

        total_files = 0
        total_updates = 0

        # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ Python —Ñ–∞–π–ª—ã –≤ utils
        for py_file in self.project_root.glob("utils/**/*.py"):
            if py_file.name != "__init__.py":
                total_files += 1
                updates = self.update_file_imports(py_file)
                if updates > 0:
                    print(f"  ‚úÖ {py_file.relative_to(self.project_root)} - {updates} –∏–º–ø–æ—Ä—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
                    total_updates += updates

        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {total_updates} –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ {total_files} —Ñ–∞–π–ª–∞—Ö utils")
        return total_updates

    def update_other_files_imports(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö –ø—Ä–æ–µ–∫—Ç–∞"""
        print("üîß –û–±–Ω–æ–≤–ª—è—é –∏–º–ø–æ—Ä—Ç—ã –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö...")

        total_files = 0
        total_updates = 0

        # –ò—â–µ–º —Ñ–∞–π–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å utils
        search_paths = [
            "ai_modules",
            "database",
            "digests",
            "events",
            "parsers",
            "repositories",
            "routes",
            "services",
            "telegram_bot",
            "tools",
        ]

        for search_path in search_paths:
            path = self.project_root / search_path
            if path.exists():
                for py_file in path.glob("**/*.py"):
                    total_files += 1
                    updates = self.update_file_imports(py_file)
                    if updates > 0:
                        print(f"  ‚úÖ {py_file.relative_to(self.project_root)} - {updates} –∏–º–ø–æ—Ä—Ç–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
                        total_updates += updates

        print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {total_updates} –∏–º–ø–æ—Ä—Ç–æ–≤ –≤ {total_files} –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö")
        return total_updates

    def verify_imports(self):
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã"""
        print("üîç –ü—Ä–æ–≤–µ—Ä—è—é –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∏–º–ø–æ—Ä—Ç–æ–≤...")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã
        test_files = [
            "tests/unit/parsers/test_clean_text.py",
            "tests/unit/utils/test_cache.py",
            "tests/integration/telegram/test_telegram_sender.py",
        ]

        for test_file in test_files:
            file_path = self.project_root / test_file
            if file_path.exists():
                with open(file_path, "r", encoding="utf-8") as f:
                    content = f.read()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ä—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∑–∞–º–µ–Ω–µ–Ω—ã
                old_imports = [imp for imp in self.import_mappings.keys() if imp in content]
                if old_imports:
                    print(f"  ‚ö†Ô∏è {test_file} –≤—Å–µ –µ—â–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å—Ç–∞—Ä—ã–µ –∏–º–ø–æ—Ä—Ç—ã: {old_imports}")
                else:
                    print(f"  ‚úÖ {test_file} - –∏–º–ø–æ—Ä—Ç—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")

        print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

    def update_all_imports(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã –≤ –ø—Ä–æ–µ–∫—Ç–µ"""
        print("üîß –ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
        print("=" * 50)

        total_updates = 0

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ tests
        total_updates += self.update_tests_imports()
        print()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ utils
        total_updates += self.update_utils_imports()
        print()

        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –≤ –¥—Ä—É–≥–∏—Ö —Ñ–∞–π–ª–∞—Ö
        total_updates += self.update_other_files_imports()
        print()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
        self.verify_imports()

        print(f"\nüéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ò–ú–ü–û–†–¢–û–í –ó–ê–í–ï–†–®–ï–ù–û!")
        print(f"üìä –í—Å–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ: {total_updates} –∏–º–ø–æ—Ä—Ç–æ–≤")

        return total_updates


if __name__ == "__main__":
    updater = ImportUpdater()
    updater.update_all_imports()
