#!/bin/bash

# üîß –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∫–æ–¥–∞
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 2.0

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

echo -e "${BLUE}üîß –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫ –∫–æ–¥–∞${NC}"
echo "=================================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
check_tools() {
    echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...${NC}"
    
    if ! python3 -c "import black" 2>/dev/null; then
        echo -e "${RED}‚ùå Black –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install black${NC}"
        exit 1
    fi
    
    if ! python3 -c "import flake8" 2>/dev/null; then
        echo -e "${RED}‚ùå Flake8 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install flake8${NC}"
        exit 1
    fi
    
    if python3 -c "import isort" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ isort –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        HAS_ISORT=true
    else
        echo -e "${YELLOW}‚ö†Ô∏è isort –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)${NC}"
        HAS_ISORT=false
    fi
    
    if python3 -c "import autopep8" 2>/dev/null; then
        echo -e "${GREEN}‚úÖ autopep8 –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
        HAS_AUTOPEP8=true
    else
        echo -e "${YELLOW}‚ö†Ô∏è autopep8 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)${NC}"
        HAS_AUTOPEP8=false
    fi
    
    echo -e "${GREEN}‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –æ—à–∏–±–æ–∫
analyze_errors() {
    echo -e "${BLUE}üìä –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –æ—à–∏–±–æ–∫ –∫–æ–¥–∞...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    TEMP_FILE=$(mktemp)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º flake8 –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    python3 -m flake8 --max-line-length=100 --ignore=E203,W503 . > "$TEMP_FILE" 2>/dev/null || true
    
    if [ -s "$TEMP_FILE" ]; then
        echo -e "${YELLOW}üìã –ù–∞–π–¥–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫:${NC}"
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
        ERROR_TYPES=$(cut -d: -f4 "$TEMP_FILE" | cut -d' ' -f2 | sort | uniq -c | sort -nr)
        echo "$ERROR_TYPES" | while read count error_type; do
            case "$error_type" in
                "E501") echo -e "  ${RED}E501${NC}: –°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ ($count –æ—à–∏–±–æ–∫)" ;;
                "F401") echo -e "  ${YELLOW}F401${NC}: –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –∏–º–ø–æ—Ä—Ç—ã ($count –æ—à–∏–±–æ–∫)" ;;
                "F841") echo -e "  ${YELLOW}F841${NC}: –ù–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ($count –æ—à–∏–±–æ–∫)" ;;
                "F541") echo -e "  ${YELLOW}F541${NC}: f-—Å—Ç—Ä–æ–∫–∏ –±–µ–∑ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤ ($count –æ—à–∏–±–æ–∫)" ;;
                "W291") echo -e "  ${CYAN}W291${NC}: –ü—Ä–æ–±–µ–ª—ã –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫ ($count –æ—à–∏–±–æ–∫)" ;;
                "W293") echo -e "  ${CYAN}W293${NC}: –ü—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏ ($count –æ—à–∏–±–æ–∫)" ;;
                "E402") echo -e "  ${PURPLE}E402${NC}: –ò–º–ø–æ—Ä—Ç—ã –Ω–µ –≤ –Ω–∞—á–∞–ª–µ —Ñ–∞–π–ª–∞ ($count –æ—à–∏–±–æ–∫)" ;;
                "E722") echo -e "  ${RED}E722${NC}: –ì–æ–ª—ã–µ except –±–ª–æ–∫–∏ ($count –æ—à–∏–±–æ–∫)" ;;
                "F821") echo -e "  ${RED}F821${NC}: –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ($count –æ—à–∏–±–æ–∫)" ;;
                "F601") echo -e "  ${RED}F601${NC}: –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–ª—é—á–∏ —Å–ª–æ–≤–∞—Ä—è ($count –æ—à–∏–±–æ–∫)" ;;
                *) echo -e "  ${BLUE}$error_type${NC}: –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ ($count –æ—à–∏–±–æ–∫)" ;;
            esac
        done
        
        echo ""
        echo -e "${BLUE}üìÅ –§–∞–π–ª—ã —Å –Ω–∞–∏–±–æ–ª—å—à–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –æ—à–∏–±–æ–∫:${NC}"
        cut -d: -f1 "$TEMP_FILE" | sort | uniq -c | sort -nr | head -10 | while read count file; do
            echo -e "  ${YELLOW}$file${NC}: $count –æ—à–∏–±–æ–∫"
        done
        
        TOTAL_ERRORS=$(wc -l < "$TEMP_FILE")
        echo ""
        echo -e "${RED}üìä –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –æ—à–∏–±–æ–∫: $TOTAL_ERRORS${NC}"
    else
        echo -e "${GREEN}‚úÖ –û—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!${NC}"
    fi
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm -f "$TEMP_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫
auto_fix_errors() {
    echo -e "${BLUE}üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ—à–∏–±–æ–∫...${NC}"
    
    # 1. Black —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    echo -e "${YELLOW}üìù –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ Black —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...${NC}"
    if ! python3 -m black --check --quiet .; then
        echo -e "${YELLOW}‚ö†Ô∏è Black –Ω–∞—à–µ–ª –ø—Ä–æ–±–ª–µ–º—ã, –ø—Ä–∏–º–µ–Ω—è—é —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...${NC}"
        python3 -m black .
        echo -e "${GREEN}‚úÖ Black —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ${NC}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        git add .
    else
        echo -e "${GREEN}‚úÖ Black —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ${NC}"
    fi
    
    # 2. autopep8 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    if [ "$HAS_AUTOPEP8" = true ]; then
        echo -e "${YELLOW}üîß –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ autopep8 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...${NC}"
        python3 -m autopep8 --in-place --recursive --aggressive --aggressive --max-line-length=100 --ignore=E203,W503 .
        echo -e "${GREEN}‚úÖ autopep8 –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã${NC}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        git add .
    else
        echo -e "${YELLOW}‚ö†Ô∏è autopep8 –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è${NC}"
    fi
    
    # 3. isort —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω)
    if [ "$HAS_ISORT" = true ]; then
        echo -e "${YELLOW}üì¶ –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤ —á–µ—Ä–µ–∑ isort...${NC}"
        python3 -m isort .
        echo -e "${GREEN}‚úÖ –ò–º–ø–æ—Ä—Ç—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã${NC}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
        git add .
    else
        echo -e "${YELLOW}‚ö†Ô∏è isort –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É –∏–º–ø–æ—Ä—Ç–æ–≤${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
fix_critical_errors() {
    echo -e "${BLUE}üö® –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
    TEMP_FILE=$(mktemp)
    
    # –ò—â–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ (F821, E722, F601)
    python3 -m flake8 --max-line-length=100 --ignore=E203,W503,E501,F401,F841,F541,W291,W293,E402 . > "$TEMP_FILE" 2>/dev/null || true
    
    if [ -s "$TEMP_FILE" ]; then
        echo -e "${RED}üö® –ù–∞–π–¥–µ–Ω—ã –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏:${NC}"
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
        grep -E "(F821|E722|F601)" "$TEMP_FILE" | head -10 | while read line; do
            echo -e "  ${RED}$line${NC}"
        done
        
        echo ""
        echo -e "${YELLOW}üí° –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ —Ç—Ä–µ–±—É—é—Ç —Ä—É—á–Ω–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:${NC}"
        echo -e "  ${RED}F821${NC}: –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'logger')"
        echo -e "  ${RED}E722${NC}: –ì–æ–ª—ã–µ except –±–ª–æ–∫–∏ (–¥–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è)"
        echo -e "  ${RED}F601${NC}: –î—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–ª—é—á–∏ —Å–ª–æ–≤–∞—Ä—è"
        
        echo ""
        echo -e "${BLUE}üîç –§–∞–π–ª—ã —Å –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–º–∏ –æ—à–∏–±–∫–∞–º–∏:${NC}"
        grep -E "(F821|E722|F601)" "$TEMP_FILE" | cut -d: -f1 | sort | uniq | while read file; do
            echo -e "  ${YELLOW}$file${NC}"
        done
        
        echo ""
        echo -e "${YELLOW}‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º –æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö${NC}"
    else
        echo -e "${GREEN}‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
    fi
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    rm -f "$TEMP_FILE"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
show_fix_stats() {
    echo -e "${BLUE}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:${NC}"
    
    # –ü–æ–¥—Å—á–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    CHANGED_FILES=$(git diff --name-only | wc -l)
    STAGED_FILES=$(git diff --cached --name-only | wc -l)
    
    echo -e "  - –ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${CHANGED_FILES}"
    echo -e "  - –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –≤ staging: ${STAGED_FILES}"
    
    if [ "$CHANGED_FILES" -gt 0 ]; then
        echo -e "${YELLOW}üìù –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:${NC}"
        git diff --name-only | head -10 | while read file; do
            echo -e "  ${YELLOW}$file${NC}"
        done
        if [ "$CHANGED_FILES" -gt 10 ]; then
            echo -e "  ${BLUE}... –∏ –µ—â–µ $((CHANGED_FILES - 10)) —Ñ–∞–π–ª–æ–≤${NC}"
        fi
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–∏—Ç–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
create_fix_commit() {
    echo -e "${BLUE}üíæ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –∫–æ–º–º–∏—Ç–∞
    if [ -z "$(git diff --cached --name-only)" ]; then
        echo -e "${YELLOW}‚ö†Ô∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞${NC}"
        return 0
    fi
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏–π
    CHANGED_FILES=$(git diff --cached --name-only | wc -l)
    NEW_FILES=$(git status --porcelain | grep "^A" | wc -l)
    MODIFIED_FILES=$(git status --porcelain | grep "^M" | wc -l)
    
    echo -e "${YELLOW}üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π:${NC}"
    echo -e "  - –ù–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤: ${NEW_FILES}"
    echo -e "  - –ò–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: ${MODIFIED_FILES}"
    echo -e "  - –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤ –≤ –∫–æ–º–º–∏—Ç–µ: ${CHANGED_FILES}"
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    COMMIT_MSG="fix: Auto-fix code quality issues

Applied automatic fixes:
- ‚úÖ Black code formatting
- ‚úÖ autopep8 style corrections (if available)
- ‚úÖ isort import sorting (if available)

Quality improvements:
- Fixed line length violations
- Removed unused imports and variables
- Fixed f-string placeholders
- Cleaned up whitespace issues
- Sorted imports properly

Files processed: ${CHANGED_FILES}
New files: ${NEW_FILES}
Modified files: ${MODIFIED_FILES}

Note: Critical errors (F821, E722, F601) may require manual review"
    
    git commit -m "$COMMIT_MSG"
    echo -e "${GREEN}‚úÖ –ö–æ–º–º–∏—Ç —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏ —Å–æ–∑–¥–∞–Ω${NC}"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        echo -e "${RED}‚ùå –≠—Ç–æ –Ω–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π${NC}"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    check_tools
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏
    analyze_errors
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –æ—à–∏–±–∫–∏
    auto_fix_errors
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
    fix_critical_errors
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    show_fix_stats
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–∏—Ç
    create_fix_commit
    
    echo ""
    echo -e "${GREEN}üéâ –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!${NC}"
    echo -e "${BLUE}üí° –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: git push origin main${NC}"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
